{"version":3,"sources":["webpack:///webpack/bootstrap cc1f1dc6a73daed9f10d","webpack:///./ts/cacheEngine.ts","webpack:///./ts/fs/storage.ts","webpack:///./ts/cache.ts","webpack:///external \"fs-extra\"","webpack:///external \"es6-promise\"","webpack:///external \"debug\"","webpack:///./ts/redis/storage.ts","webpack:///./ts/fs/instance.ts","webpack:///external \"path\"","webpack:///./ts/Helpers.ts","webpack:///./ts/redis/instance.ts","webpack:///./ts/redis/pool.ts","webpack:///external \"redis\"","webpack:///external \"url\""],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,sBAAqB;AACrB,kBAAiB;AACjB,cAAa;AACb;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,sBAAqB;AACrB,kBAAiB;AACjB,cAAa;AACb;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,+CAA8C,cAAc;AAC5D;AACA;;;;;;;AChLA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;AChDA,sC;;;;;;ACAA,yC;;;;;;ACAA,mC;;;;;;ACAA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,0BAAyB;AACzB;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,0BAAyB;AACzB;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,0DAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;ACjLA,kC;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,0BAAyB;AACzB,sBAAqB;AACrB,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA,sBAAqB;AACrB,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA,sBAAqB;AACrB;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;AC7PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC1DA,mC;;;;;;ACAA,iC","file":"dist/simple-cache.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap cc1f1dc6a73daed9f10d\n **/","\"use strict\";\nvar storage_1 = require('./fs/storage');\nvar storage_2 = require('./redis/storage');\nvar es6_promise_1 = require('es6-promise');\nvar instance_1 = require(\"./fs/instance\");\nvar instance_2 = require(\"./redis/instance\");\nvar nodeurl = require('url');\nvar Helpers_1 = require('./Helpers');\nvar dbug = require('debug');\nvar debug = dbug('simple-url-cache');\nvar CacheEngine = (function () {\n    function CacheEngine(defaultDomain, instanceName, storageConfig, cacheRules) {\n        this.defaultDomain = defaultDomain;\n        this.instanceName = instanceName;\n        this.storageConfig = storageConfig;\n        this.cacheRules = cacheRules;\n        Helpers_1.default.CheckType(defaultDomain, 'string');\n        Helpers_1.default.CheckType(instanceName, 'string');\n        try {\n            Helpers_1.default.IsSet('cacheRules', cacheRules);\n            Helpers_1.default.CheckType(cacheRules.default, 'string');\n            Helpers_1.default.CheckType(cacheRules.cacheAlways, Array);\n            Helpers_1.default.CheckType(cacheRules.cacheNever, Array);\n            Helpers_1.default.CheckType(cacheRules.cacheMaxAge, Array);\n            cacheRules.cacheAlways.forEach(function (rule) {\n                Helpers_1.default.CheckType(rule.regex, RegExp);\n            });\n            cacheRules.cacheNever.forEach(function (rule) {\n                Helpers_1.default.CheckType(rule.regex, RegExp);\n            });\n            cacheRules.cacheMaxAge.forEach(function (rule) {\n                Helpers_1.default.CheckType(rule.regex, RegExp);\n                Helpers_1.default.CheckType(rule.maxAge, 'number');\n            });\n        }\n        catch (e) {\n            Helpers_1.default.Error('The cacheRules is invalid', cacheRules);\n        }\n        if (this.isFS(storageConfig)) {\n            this.type = 'file';\n        }\n        else {\n            this.type = 'redis';\n        }\n        if (typeof CacheEngine.pool[this.type] === 'undefined') {\n            CacheEngine.pool[this.type] = {};\n        }\n        if (typeof CacheEngine.pool[this.type][instanceName] === 'undefined') {\n            CacheEngine.pool[this.type][instanceName] = {};\n        }\n    }\n    CacheEngine.prototype.isFS = function (storageConfig) {\n        return typeof storageConfig.dir !== 'undefined';\n    };\n    CacheEngine.prototype.getInstance = function (domain) {\n        if (typeof CacheEngine.pool[this.type][this.instanceName] === 'undefined') {\n            CacheEngine.pool[this.type][this.instanceName] = {};\n        }\n        if (typeof CacheEngine.pool[this.type][this.instanceName][domain] === 'undefined') {\n            if (this.isFS(this.storageConfig)) {\n                CacheEngine.pool[this.type][this.instanceName][domain] = new instance_1.default(domain, this.instanceName, this.storageConfig, this.cacheRules);\n            }\n            else {\n                CacheEngine.pool[this.type][this.instanceName][domain] = new instance_2.default(domain, this.instanceName, this.storageConfig, this.cacheRules);\n            }\n        }\n        return CacheEngine.pool[this.type][this.instanceName][domain];\n    };\n    CacheEngine.prototype.clearAllDomains = function () {\n        var _this = this;\n        var instance = this.getInstance(this.defaultDomain);\n        var tmpInstance;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            instance.getAllCachedDomains().then(function (domains) {\n                if (domains.length === 0) {\n                    resolve(true);\n                }\n                var nb = 0;\n                domains.forEach(function (domain) {\n                    tmpInstance = _this.getInstance(domain);\n                    tmpInstance.clearAllCache().then(function () {\n                        nb++;\n                        if (nb === domains.length) {\n                            resolve(true);\n                        }\n                    }, function (err) {\n                        reject(err);\n                    });\n                });\n            }, function (err) {\n                reject(err);\n            });\n        });\n    };\n    CacheEngine.prototype.clearDomain = function (domain) {\n        if (typeof domain === 'undefined') {\n            domain = this.defaultDomain;\n        }\n        return this.getInstance(domain).clearAllCache();\n    };\n    CacheEngine.prototype.getCachedDomains = function () {\n        var instance = this.getInstance(this.defaultDomain);\n        return instance.getAllCachedDomains();\n    };\n    CacheEngine.prototype.getCachedURLs = function (domain) {\n        if (typeof domain === 'undefined') {\n            domain = this.defaultDomain;\n        }\n        var instance = this.getInstance(domain);\n        return instance.getCachedURLs();\n    };\n    CacheEngine.prototype.getAllCachedURLs = function () {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            var urls = {};\n            _this.getCachedDomains().then(function (domains) {\n                var nb = 0;\n                if (domains.length === 0) {\n                    resolve({});\n                }\n                domains.forEach(function (domain) {\n                    urls[domain] = [];\n                    _this.getCachedURLs(domain).then(function (result) {\n                        urls[domain] = result;\n                        nb++;\n                        debug(nb, domains.length);\n                        if (nb === domains.length) {\n                            console.log('resolving ', nb);\n                            resolve(urls);\n                        }\n                    }, function (err) {\n                        reject(err);\n                    });\n                });\n            }, function (err) {\n                reject(err);\n            });\n        });\n    };\n    CacheEngine.prototype.url = function (url) {\n        var instance;\n        var parsedURL = nodeurl.parse(url);\n        var relativeURL = parsedURL.path;\n        if (!/\\//.test(relativeURL)) {\n            relativeURL = '/' + relativeURL;\n        }\n        parsedURL.pathname = null;\n        parsedURL.path = null;\n        parsedURL.hash = null;\n        parsedURL.query = null;\n        parsedURL.search = null;\n        var domain = nodeurl.format(parsedURL);\n        if (domain === relativeURL) {\n            throw new Error('The url ' + url + ' is not valid');\n        }\n        if (domain.length === 0) {\n            debug('This url', url, ' has no domain, using defaultDomain = ', this.defaultDomain);\n            instance = this.getInstance(this.defaultDomain);\n        }\n        else {\n            debug('This URL ', url, ' has a domain: ', domain);\n            instance = this.getInstance(domain);\n        }\n        if (instance instanceof instance_1.default) {\n            return new storage_1.default(relativeURL, instance);\n        }\n        else if (instance instanceof instance_2.default) {\n            return new storage_2.default(relativeURL, instance);\n        }\n    };\n    CacheEngine.pool = {};\n    return CacheEngine;\n}());\n;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CacheEngine;\nmodule.exports = CacheEngine;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/cacheEngine.ts\n ** module id = 0\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar cache_1 = require('./../cache');\nvar fs = require('fs-extra');\nvar es6_promise_1 = require('es6-promise');\nvar dbug = require('debug');\nvar debug = dbug('simple-url-cache-FS');\nvar FileStorage = (function (_super) {\n    __extends(FileStorage, _super);\n    function FileStorage(_url, storageInstance) {\n        var _this = this;\n        _super.call(this, storageInstance, _url);\n        this._url = _url;\n        this.delete = function () {\n            return _this.getStorageInstance().delete(_this._currentFilePath);\n        };\n        this.get = function () {\n            return _this.getStorageInstance().get(_this._currentFilePath);\n        };\n        this.has = function () {\n            return new es6_promise_1.Promise(function (resolve, reject) {\n                _this.getStorageInstance().has(_this._currentFilePath).then(function (exists) {\n                    if (exists) {\n                        if (_this._currentCategory === 'maxAge') {\n                            var stats = fs.statSync(_this._currentFilePath);\n                            var nowTimestamp = new Date().getTime();\n                            var modificationTime = stats.mtime.getTime();\n                            var expiration = modificationTime + _this._currentMaxAge * 1000;\n                            var diff = (nowTimestamp - expiration);\n                            _this.diff = diff;\n                            if (diff > 0) {\n                                debug('This url is expired.... removing the cache. ', _this._currentFilePath);\n                                _this.getStorageInstance().delete(_this._currentFilePath).then(function (ok) {\n                                    resolve(false);\n                                }, function (err) {\n                                    reject(err);\n                                });\n                            }\n                            else {\n                                debug('This url is cached.', _this._currentFilePath);\n                                resolve(true);\n                            }\n                        }\n                        else {\n                            debug('This url is cached ', _this._currentFilePath);\n                            resolve(true);\n                        }\n                    }\n                    else {\n                        resolve(false);\n                    }\n                }, function (e) {\n                    reject(e);\n                });\n            });\n        };\n        this.set = function (html, force) {\n            return new es6_promise_1.Promise(function (resolve, reject) {\n                if (force === true) {\n                    _this.getStorageInstance().set(_this._currentFilePath, html).then(function () {\n                        resolve(true);\n                    }, function (err) {\n                        reject(err);\n                    });\n                    return;\n                }\n                if (_this._currentCategory === 'never') {\n                    debug('this url should never been stored');\n                    resolve(false);\n                    return;\n                }\n                _this.getStorageInstance().has(_this._currentFilePath).then(function (has) {\n                    if (has) {\n                        resolve(false);\n                    }\n                    _this.getStorageInstance().set(_this._currentFilePath, html).then(function (result) {\n                        resolve(result);\n                    }, function (err) {\n                        reject(err);\n                    });\n                }, function (err) {\n                    reject(err);\n                });\n            });\n        };\n        this._currentFilePath = storageInstance.getFilePath(this._url);\n    }\n    return FileStorage;\n}(cache_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FileStorage;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/fs/storage.ts\n ** module id = 1\n ** module chunks = 0\n **/","\"use strict\";\nvar Cache = (function () {\n    function Cache(_storageInstance, currentUrl) {\n        var _this = this;\n        this._storageInstance = _storageInstance;\n        this.currentUrl = currentUrl;\n        this.getRegexTest = function (u) {\n            return u.regex.test(_this.currentUrl);\n        };\n        this.getCacheCategory = function () {\n            var i;\n            for (i in _this._config.cacheNever) {\n                if (_this.getRegexTest(_this._config.cacheNever[i]) === true) {\n                    _this._currentCategory = 'never';\n                    return;\n                }\n            }\n            for (i in _this._config.cacheAlways) {\n                if (_this.getRegexTest(_this._config.cacheAlways[i]) === true) {\n                    _this._currentCategory = 'always';\n                    return;\n                }\n            }\n            for (i in _this._config.cacheMaxAge) {\n                if (_this.getRegexTest(_this._config.cacheMaxAge[i]) === true) {\n                    _this._currentCategory = 'maxAge';\n                    _this._currentMaxAge = _this._config.cacheMaxAge[i].maxAge;\n                    return;\n                }\n            }\n            _this._currentCategory = _this._config.default;\n            return;\n        };\n        this._config = this._storageInstance.getCacheRules();\n        this.getCacheCategory();\n    }\n    Cache.prototype.getCategory = function () {\n        return this._currentCategory;\n    };\n    Cache.prototype.getCurrentUrl = function () {\n        return this.currentUrl;\n    };\n    Cache.prototype.getStorageInstance = function () {\n        return this._storageInstance;\n    };\n    return Cache;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Cache;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/cache.ts\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = require(\"fs-extra\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs-extra\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = require(\"es6-promise\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"es6-promise\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = require(\"debug\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"debug\"\n ** module id = 5\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar cache_1 = require('./../cache');\nvar es6_promise_1 = require('es6-promise');\nvar dbug = require('debug');\nvar debug = dbug('simple-url-cache-REDIS');\nvar RedisStorage = (function (_super) {\n    __extends(RedisStorage, _super);\n    function RedisStorage(_url, storageInstance) {\n        var _this = this;\n        _super.call(this, storageInstance, _url);\n        this._url = _url;\n        this.delete = function () {\n            return new es6_promise_1.Promise(function (resolve, reject) {\n                _this.has().then(function (isCached) {\n                    if (!isCached) {\n                        reject();\n                    }\n                    else {\n                        _this.getStorageInstance().delete(_this._url).then(function () {\n                            resolve(true);\n                        }, function (err) {\n                            reject(err);\n                        });\n                    }\n                }, function (err) {\n                    reject(err);\n                });\n            });\n        };\n        this.has = function () {\n            return _this.getStorageInstance().has(_this._url);\n        };\n        this.get = function () {\n            return _this.getStorageInstance().get(_this._url);\n        };\n        this.set = function (html, force) {\n            return new es6_promise_1.Promise(function (resolve, reject) {\n                if (force === true) {\n                    var ttl = 0;\n                    if (_this._currentCategory === 'maxAge') {\n                        ttl = _this._currentMaxAge;\n                    }\n                    _this.getStorageInstance().set(_this._url, html, ttl).then(function (result) {\n                        resolve(result);\n                    }, function (err) {\n                        reject(err);\n                    });\n                    return;\n                }\n                if (_this._currentCategory === 'never') {\n                    debug('this url should never been stored');\n                    resolve(false);\n                    return;\n                }\n                _this.getStorageInstance().has(_this._url).then(function (has) {\n                    if (has === true) {\n                        debug('This url is already cached - not storing it: ', _this._url);\n                        resolve(false);\n                    }\n                    else {\n                        var ttl = 0;\n                        if (_this._currentCategory === 'maxAge') {\n                            ttl = _this._currentMaxAge;\n                        }\n                        _this.getStorageInstance().set(_this._url, html, ttl).then(function (result) {\n                            resolve(result);\n                        }, function (err) {\n                            reject(err);\n                        });\n                    }\n                }, function (err) {\n                    reject(err);\n                });\n            });\n        };\n        debug('RedisStorage instanciated with url: ' + this._url);\n    }\n    return RedisStorage;\n}(cache_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RedisStorage;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/redis/storage.ts\n ** module id = 6\n ** module chunks = 0\n **/","\"use strict\";\nvar es6_promise_1 = require('es6-promise');\nvar fs = require('fs-extra');\nvar path = require('path');\nvar debg = require('debug');\nvar Helpers_1 = require(\"../Helpers\");\nvar debug = debg('simple-url-cache-FS');\nvar FileStorageInstance = (function () {\n    function FileStorageInstance(domain, instanceName, config, rules) {\n        this.domain = domain;\n        this.instanceName = instanceName;\n        this.config = config;\n        this.rules = rules;\n        debug('Creating a new FileStorage Instance with domain, instancename and path ', domain, instanceName);\n        Helpers_1.default.CheckType(domain, 'string');\n        Helpers_1.default.CheckType(instanceName, 'string');\n        this.baseDir = path.resolve(path.join(this.config.dir, this.escape(this.instanceName), this.escape(this.domain)));\n        debug(this.baseDir);\n        fs.ensureDirSync(this.baseDir);\n    }\n    FileStorageInstance.prototype.escape = function (key) {\n        var escaped = key.replace(':', '%3A');\n        escaped = escaped.replace('.', '%2E');\n        escaped = escaped.replace('~', '%7E');\n        escaped = encodeURIComponent(escaped);\n        return escaped;\n    };\n    ;\n    FileStorageInstance.prototype.unescape = function (key) {\n        var unescaped = decodeURIComponent(key);\n        unescaped = unescaped.replace('%3A', ':');\n        unescaped = unescaped.replace('%2E', '.');\n        unescaped = unescaped.replace('%7E', '~');\n        return unescaped;\n    };\n    FileStorageInstance.prototype.validate = function (key) {\n        if (key.length === 0) {\n            return false;\n        }\n        if (key.length > 255) {\n            return false;\n        }\n        if (typeof key === 'undefined') {\n            return false;\n        }\n        return true;\n    };\n    ;\n    FileStorageInstance.prototype.clearAllCache = function () {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            try {\n                if (!fs.existsSync(_this.baseDir)) {\n                    resolve(true);\n                }\n                fs.removeSync(_this.baseDir);\n                resolve(true);\n            }\n            catch (e) {\n                debug('error while emptying directory', _this.baseDir, e);\n                reject(e);\n            }\n        });\n    };\n    FileStorageInstance.prototype.delete = function (key) {\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            try {\n                fs.unlinkSync(key);\n                resolve(true);\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    FileStorageInstance.prototype.destroy = function () { };\n    FileStorageInstance.prototype.get = function (key) {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            _this.has(key).then(function (isCached) {\n                if (!isCached) {\n                    reject();\n                }\n                else {\n                    resolve(fs.readFileSync(key, 'utf8'));\n                }\n            });\n        });\n    };\n    ;\n    FileStorageInstance.prototype.getAllCachedDomains = function () {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            try {\n                if (!fs.existsSync(_this.baseDir)) {\n                    resolve([]);\n                }\n                var list = fs.readdirSync(path.resolve(path.join(_this.config.dir, _this.escape(_this.instanceName))));\n                if (list.length === 0) {\n                    ;\n                    resolve([]);\n                }\n                debug('list = ', list);\n                var results_1 = [];\n                list.forEach(function (dir) {\n                    results_1.push(_this.unescape(dir));\n                });\n                resolve(results_1);\n            }\n            catch (e) {\n                debug('Error while reading dir', _this.config.dir);\n                reject(e);\n            }\n        });\n    };\n    FileStorageInstance.prototype.getCachedURLs = function () {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            try {\n                if (!fs.existsSync(_this.baseDir)) {\n                    resolve([]);\n                }\n                var list = fs.readdirSync(_this.baseDir);\n                for (var i in list) {\n                    list[i] = _this.unescape(list[i]);\n                }\n                resolve(list);\n            }\n            catch (e) {\n                debug('Error while reading dir', _this.baseDir);\n                reject(e);\n            }\n        });\n    };\n    FileStorageInstance.prototype.getFilePath = function (url) {\n        var file = this.escape(url);\n        if (this.validate(file)) {\n            return path.join(this.baseDir, file);\n        }\n        throw new Error('Invalid file');\n    };\n    FileStorageInstance.prototype.getCacheRules = function () {\n        return this.rules;\n    };\n    FileStorageInstance.prototype.has = function (key) {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            try {\n                if (!fs.existsSync(_this.baseDir)) {\n                    resolve(false);\n                }\n                var exist = fs.existsSync(key);\n                resolve(exist);\n            }\n            catch (e) {\n                debug(e);\n                reject(e);\n            }\n        });\n    };\n    FileStorageInstance.prototype.set = function (key, value) {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            try {\n                fs.ensureDirSync(_this.baseDir);\n                fs.writeFileSync(key, value, 'utf-8');\n                resolve(true);\n            }\n            catch (e) {\n                debug(e);\n                reject(e);\n            }\n        });\n    };\n    return FileStorageInstance;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FileStorageInstance;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/fs/instance.ts\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = require(\"path\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"path\"\n ** module id = 8\n ** module chunks = 0\n **/","'use strict';\nvar debug = require('debug')('simple-url-cache');\nvar Helpers = (function () {\n    function Helpers() {\n    }\n    Helpers.SameRegex = function (r1, r2) {\n        debug('checking if rules are the same', r1, r2);\n        if (r1 instanceof RegExp && r2 instanceof RegExp) {\n            var props = [\"global\", \"multiline\", \"ignoreCase\", \"source\"];\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                if (r1[prop] !== r2[prop]) {\n                    debug('props diff', prop, r1[prop], r2[prop]);\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    Helpers.IsSet = function (name, input) {\n        if (typeof input === 'undefined' && input !== null && input !== '') {\n            Helpers.Error(name, 'is not set');\n        }\n    };\n    Helpers.CheckType = function (input, type) {\n        if (typeof input === 'object' && type === 'object') {\n            return;\n        }\n        if (typeof input === 'object') {\n            if (typeof type === 'string' && input.constructor !== type) {\n                Helpers.Error('This input is not a valid', type, input, ' type is', input);\n            }\n            else if (typeof type === 'array') {\n                var valid = false;\n                type.forEach(function (item) {\n                    if (input.constructor === item) {\n                        valid = true;\n                    }\n                });\n                if (!valid) {\n                    Helpers.Error(input, 'Doesn\\'t match any of these types', type, ' got ', input.constructor);\n                }\n            }\n        }\n        else {\n            if (typeof type === 'string' && typeof input !== type) {\n                Helpers.Error('This input is not a valid', type, input, ' type is', typeof input);\n            }\n            else if (typeof type === 'array') {\n                var valid = false;\n                type.forEach(function (item) {\n                    if (typeof input === item) {\n                        valid = true;\n                    }\n                });\n                if (!valid) {\n                    Helpers.Error(input, 'Doesn\\'t match any of these types', type, ' got ', typeof input);\n                }\n            }\n        }\n    };\n    Helpers.StringIn = function (input, validValues) {\n        Helpers.CheckType(input, 'string');\n        if (validValues.length === 0) {\n            return;\n        }\n        var valid = false;\n        validValues.forEach(function (item) {\n            if (item === input) {\n                valid = true;\n            }\n        });\n        if (!valid) {\n            Helpers.Error(input, 'should match', validValues);\n        }\n    };\n    Helpers.RegexNotIn = function (regex, regexes, desc) {\n        if (regexes.length === 0) {\n            return;\n        }\n        Helpers.CheckType(regex, RegExp);\n        regexes.forEach(function (item) {\n            if (Helpers.SameRegex(item, regex)) {\n                Helpers.Error(item, ' Is already defined ', desc);\n            }\n        });\n    };\n    Helpers.Error = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i - 0] = arguments[_i];\n        }\n        var str = [];\n        for (var i in data) {\n            if (typeof data[i].toString === 'function') {\n                str.push(data[i].toString());\n            }\n            else {\n                str.push(data[i]);\n                str.push(JSON.stringify(data[i]));\n            }\n        }\n        debug(data);\n        throw new Error(str.join(', '));\n    };\n    return Helpers;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Helpers;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/Helpers.ts\n ** module id = 9\n ** module chunks = 0\n **/","\"use strict\";\nvar pool_1 = require('./pool');\nvar debg = require('debug');\nvar debug = debg('simple-url-cache-REDIS');\nvar es6_promise_1 = require('es6-promise');\nvar Helpers_1 = require(\"../Helpers\");\nvar RedisStorageInstance = (function () {\n    function RedisStorageInstance(domain, instanceName, config, rules) {\n        this.domain = domain;\n        this.instanceName = instanceName;\n        this.config = config;\n        this.rules = rules;\n        Helpers_1.default.CheckType(domain, 'string');\n        Helpers_1.default.CheckType(instanceName, 'string');\n        this._conn = new pool_1.RedisPool(config);\n        this.hashKey = 'simple-url-cache:' + this.instanceName;\n        this.domainHashKey = this.domain + ':' + this.instanceName;\n    }\n    RedisStorageInstance.prototype.getKey = function (key) {\n        return this.domainHashKey + ':' + key;\n    };\n    RedisStorageInstance.prototype.getCacheRules = function () {\n        return this.rules;\n    };\n    RedisStorageInstance.prototype.clearAllCache = function () {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            var client = _this._conn.getConnection();\n            debug('Clear all cache called');\n            client.hdel(_this.hashKey, _this.domain, function (err) {\n                if (err)\n                    reject(err);\n                client.hkeys(_this.domainHashKey, function (err, keys) {\n                    debug('getting keys for ', _this.domainHashKey, keys);\n                    var nb = 0;\n                    if (keys.length === 0) {\n                        resolve(true);\n                    }\n                    keys.forEach(function (key) {\n                        debug('Deleting key ', _this.getKey(key));\n                        client.del(_this.getKey(key), function (err) {\n                            if (err)\n                                reject(err);\n                            debug('deleting hash key for ', _this.domainHashKey, key);\n                            client.hdel(_this.domainHashKey, key, function (err) {\n                                if (err)\n                                    reject(err);\n                                if (++nb === keys.length) {\n                                    resolve(true);\n                                }\n                            });\n                        });\n                    });\n                });\n            });\n        });\n    };\n    RedisStorageInstance.prototype.getAllCachedDomains = function () {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            debug('getAllCachedDomains called');\n            _this._conn.getConnection().hkeys(_this.hashKey, function (err, results) {\n                if (err)\n                    reject(err);\n                debug('hkeys() ', _this.hashKey, results);\n                resolve(results);\n            });\n        });\n    };\n    RedisStorageInstance.prototype.getCachedURLs = function () {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            var client = _this._conn.getConnection();\n            var urls = [];\n            client.hkeys(_this.domainHashKey, function (err, results) {\n                if (err)\n                    reject(err);\n                var nb = 0;\n                if (results.length === 0) {\n                    resolve([]);\n                }\n                results.forEach(function (url) {\n                    client.get(_this.getKey(url), function (err, data) {\n                        if (err)\n                            reject(err);\n                        if (data !== null) {\n                            urls.push(url);\n                            nb++;\n                            if (nb === results.length) {\n                                resolve(urls);\n                            }\n                        }\n                        else {\n                            client.hdel(_this.domainHashKey, url, function (err) {\n                                if (err)\n                                    reject(err);\n                                nb++;\n                                if (nb === results.length) {\n                                    resolve(urls);\n                                }\n                            });\n                        }\n                    });\n                });\n            });\n        });\n    };\n    RedisStorageInstance.prototype.delete = function (key) {\n        var _this = this;\n        debug('removing url cache: ', key);\n        var client = this._conn.getConnection();\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            debug('Deleting KEY ', _this.getKey(key));\n            client.del(_this.getKey(key), function (err) {\n                if (err) {\n                    debug('REDIS ERROR, ', err);\n                    reject(err);\n                }\n                debug('DELETING HASH ', _this.domainHashKey);\n                client.hdel(_this.domainHashKey, key, function (err) {\n                    if (err) {\n                        debug('REDIS ERROR', err);\n                        reject(err);\n                    }\n                    resolve(true);\n                });\n            });\n        });\n    };\n    RedisStorageInstance.prototype.get = function (key) {\n        var _this = this;\n        debug('Retrieving url cache: ', key);\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            var client = _this._conn.getConnection();\n            client.hget(_this.domainHashKey, key, function (err, content) {\n                if (err)\n                    reject(err);\n                if (content === null) {\n                    reject(null);\n                }\n                client.get(_this.getKey(key), function (err, timestamp) {\n                    if (err)\n                        reject(err);\n                    if (timestamp === null) {\n                        client.hdel(_this.domainHashKey, _this.getKey(key), function (err) {\n                            if (err)\n                                reject(err);\n                            reject(null);\n                        });\n                    }\n                    else {\n                        resolve(content);\n                    }\n                });\n            });\n        });\n    };\n    RedisStorageInstance.prototype.has = function (key) {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            var client = _this._conn.getConnection();\n            client.get(_this.getKey(key), function (err, data) {\n                if (err) {\n                    debug('Error while querying is cached on redis: ', key, err);\n                    reject(err);\n                }\n                else {\n                    var isCached = data !== null;\n                    debug('HAS, key ', _this.getKey(key), 'is cached? ', isCached);\n                    if (!isCached) {\n                        client.hdel(_this.domainHashKey, key, function (err) {\n                            debug('hdel executed', _this.domainHashKey, key);\n                            if (err) {\n                                reject(err);\n                            }\n                            resolve(false);\n                        });\n                    }\n                    else {\n                        resolve(true);\n                    }\n                }\n            });\n        });\n    };\n    RedisStorageInstance.prototype.set = function (key, value, ttl) {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            var client = _this._conn.getConnection();\n            client.hset(_this.hashKey, _this.domain, _this.domain, function (err, result) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    client.hset(_this.domainHashKey, key, value, function (err, exists) {\n                        if (err) {\n                            reject(err);\n                        }\n                        if (exists === 0) {\n                            debug('Already set ');\n                            resolve(true);\n                            return;\n                        }\n                        else {\n                            client.get(_this.getKey(key), function (err, result) {\n                                if (err) {\n                                    reject(err);\n                                    return;\n                                }\n                                if (result === null) {\n                                    debug('REDIS timestamp not set');\n                                    client.set(_this.getKey(key), Date.now(), function (err) {\n                                        if (err) {\n                                            reject(err);\n                                            return;\n                                        }\n                                        if (ttl > 0) {\n                                            client.expire(_this.getKey(key), ttl, function (err) {\n                                                if (err)\n                                                    reject(err);\n                                                resolve(true);\n                                            });\n                                        }\n                                        else {\n                                            resolve(true);\n                                        }\n                                    });\n                                }\n                                else {\n                                    if (ttl > 0) {\n                                        client.expire(_this.getKey(key), ttl, function (err) {\n                                            if (err)\n                                                reject(err);\n                                            resolve(true);\n                                        });\n                                    }\n                                    else {\n                                        resolve(true);\n                                    }\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    };\n    RedisStorageInstance.prototype.destroy = function () {\n        this._conn.kill();\n    };\n    return RedisStorageInstance;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RedisStorageInstance;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/redis/instance.ts\n ** module id = 10\n ** module chunks = 0\n **/","\"use strict\";\nvar redis = require('redis');\nvar dbug = require('debug');\nvar debug = dbug('simple-url-cache-REDIS');\nvar RedisPool = (function () {\n    function RedisPool(config) {\n        RedisPool.connect(config);\n        this.db = config.db;\n    }\n    RedisPool.connect = function (config) {\n        if (typeof RedisPool._pool[config.db] === 'undefined' || RedisPool._pool[config.db] === null || !RedisPool._isOnline[config.db]) {\n            debug('This redis connection has never been instanciated before', config.db);\n            RedisPool._isOnline[config.db] = false;\n            RedisPool._pool[config.db] = redis.createClient(config);\n            RedisPool._pool[config.db].on('connect', function () {\n                RedisPool._isOnline[config.db] = true;\n                debug('redis connected');\n            });\n            RedisPool._pool[config.db].on('error', function (e) {\n                debug(e);\n                RedisPool._isOnline[config.db] = false;\n                RedisPool._pool[config.db] = null;\n                throw new Error(e);\n            });\n            RedisPool._pool[config.db].on('end', function () {\n                RedisPool._pool[config.db] = null;\n                RedisPool._isOnline[config.db] = false;\n                debug('Connection closed');\n            });\n            RedisPool._pool[config.db].on('warning', function (msg) {\n                debug('Warning called: ', msg);\n            });\n        }\n        return RedisPool._pool[config.db];\n    };\n    RedisPool.isOnline = function (db) {\n        return RedisPool._isOnline[db];\n    };\n    RedisPool.kill = function (db) {\n        if (RedisPool._isOnline[db] === true) {\n            RedisPool._pool[db].end();\n        }\n    };\n    RedisPool.prototype.getConnection = function () {\n        return RedisPool._pool[this.db];\n    };\n    RedisPool.prototype.isOnline = function () {\n        return RedisPool._isOnline[this.db];\n    };\n    RedisPool.prototype.kill = function () {\n        if (RedisPool._isOnline[this.db] === true) {\n            RedisPool._pool[this.db].end();\n        }\n    };\n    RedisPool._pool = {};\n    RedisPool._isOnline = {};\n    return RedisPool;\n}());\nexports.RedisPool = RedisPool;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/redis/pool.ts\n ** module id = 11\n ** module chunks = 0\n **/","module.exports = require(\"redis\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"redis\"\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = require(\"url\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"url\"\n ** module id = 13\n ** module chunks = 0\n **/"],"sourceRoot":""}