{"version":3,"sources":["webpack:///webpack/bootstrap 7ee441beea7ac49b8304","webpack:///./ts/cacheEngine.ts","webpack:///external \"es6-promise\"","webpack:///./ts/redis/instance.ts","webpack:///./ts/interfaces.ts","webpack:///./ts/helpers.ts","webpack:///./ts/redis/pool.ts","webpack:///external \"redis\"","webpack:///external \"debug\"","webpack:///external \"url\"","webpack:///./ts/cache.ts"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA;;;;;;;ACnIA,yC;;;;;;ACAA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA,sBAAqB;AACrB,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,0BAAyB;AACzB,sBAAqB;AACrB,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB;AACA,sBAAqB;AACrB,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,sBAAqB;AACrB;AACA,cAAa;AACb;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,sBAAqB;AACrB;AACA,cAAa;AACb;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA,sBAAqB;AACrB;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;AC9UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC1DA,mC;;;;;;ACAA,mC;;;;;;ACAA,iC;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D","file":"dist/simple-cache.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7ee441beea7ac49b8304\n **/","\"use strict\";\nvar es6_promise_1 = require('es6-promise');\nvar instance_1 = require(\"./redis/instance\");\nvar helpers_1 = require('./helpers');\nvar nodeurl = require('url');\nvar dbug = require('debug');\nvar cache_1 = require('./cache');\nvar debug = dbug('simple-url-cache');\nvar CacheEngine = (function () {\n    function CacheEngine(defaultDomain, instanceName, storageConfig, cacheRules) {\n        this.defaultDomain = defaultDomain;\n        this.instanceName = instanceName;\n        this.storageConfig = storageConfig;\n        this.cacheRules = cacheRules;\n        helpers_1.default.isStringDefined(defaultDomain);\n        helpers_1.default.isStringDefined(instanceName);\n        helpers_1.default.validateCacheConfig(cacheRules);\n        if (helpers_1.default.isRedis(storageConfig)) {\n            this.type = 'file';\n        }\n        else {\n            throw new Error('Only Redis is supported');\n        }\n        if (typeof CacheEngine.pool[this.type] === 'undefined') {\n            CacheEngine.pool[this.type] = {};\n            CacheEngine.locks[this.type] = {};\n        }\n        if (typeof CacheEngine.pool[this.type][instanceName] === 'undefined') {\n            CacheEngine.pool[this.type][instanceName] = {};\n            CacheEngine.locks[this.type][instanceName] = false;\n        }\n    }\n    CacheEngine.prototype.clearDomain = function (domain) {\n        var _this = this;\n        if (typeof domain === 'undefined') {\n            domain = this.defaultDomain;\n        }\n        helpers_1.default.isStringDefined(domain);\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            var instance = _this.getInstance();\n            instance.clearDomain(domain).then(function () {\n                resolve(true);\n            }, function (err) {\n                reject(err);\n            });\n        });\n    };\n    CacheEngine.prototype.clearInstance = function () {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            var instance = _this.getInstance();\n            instance.clearCache().then(function () {\n                resolve(true);\n            }, function (err) {\n                reject(err);\n            });\n        });\n    };\n    CacheEngine.prototype.getStoredHostnames = function () {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            var instance = _this.getInstance();\n            instance.getCachedDomains().then(function (domains) {\n                resolve(domains);\n            }, function (err) {\n                reject(err);\n            });\n        });\n    };\n    CacheEngine.prototype.getStoredURLs = function (domain) {\n        var _this = this;\n        if (typeof domain === 'undefined') {\n            domain = this.defaultDomain;\n        }\n        helpers_1.default.isStringDefined(domain);\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            var instance = _this.getInstance();\n            instance.getCachedURLs(domain).then(function (urls) {\n                resolve(urls);\n            }, function (err) {\n                reject(err);\n            });\n        });\n    };\n    CacheEngine.prototype.url = function (url) {\n        helpers_1.default.isStringDefined(url);\n        var instance;\n        var parsedURL = nodeurl.parse(url);\n        var relativeURL = parsedURL.path;\n        if (!/\\//.test(relativeURL)) {\n            relativeURL = '/' + relativeURL;\n        }\n        parsedURL.pathname = null;\n        parsedURL.path = null;\n        parsedURL.hash = null;\n        parsedURL.query = null;\n        parsedURL.search = null;\n        var domain = nodeurl.format(parsedURL);\n        if (domain === relativeURL) {\n            throw new Error('The url ' + url + ' is not valid');\n        }\n        if (domain.length === 0) {\n            debug('This url', url, ' has no domain, using defaultDomain = ', this.defaultDomain);\n            domain = this.defaultDomain;\n        }\n        else {\n            debug('This URL ', url, ' has a domain: ', domain);\n        }\n        instance = this.getInstance();\n        return new cache_1.default(domain, instance, relativeURL);\n    };\n    CacheEngine.prototype.getInstance = function () {\n        if (typeof CacheEngine.pool[this.type][this.instanceName] === 'undefined') {\n            CacheEngine.pool[this.type][this.instanceName] = {};\n            CacheEngine.locks[this.type][this.instanceName] = {};\n        }\n        if (helpers_1.default.isRedis(this.storageConfig)) {\n            CacheEngine.pool[this.type][this.instanceName] = new instance_1.default(this.instanceName, this.storageConfig, this.cacheRules);\n        }\n        return CacheEngine.pool[this.type][this.instanceName];\n    };\n    CacheEngine.pool = {};\n    CacheEngine.locks = {};\n    CacheEngine.helpers = {\n        validateRedisStorageConfig: helpers_1.default.validateRedisStorageConfig,\n        validateCacheConfig: helpers_1.default.validateCacheConfig\n    };\n    return CacheEngine;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CacheEngine;\nmodule.exports = CacheEngine;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/cacheEngine.ts\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = require(\"es6-promise\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"es6-promise\"\n ** module id = 1\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar interfaces_1 = require(\"./../interfaces\");\nvar pool_1 = require('./pool');\nvar debg = require('debug');\nvar debug = debg('simple-url-cache-REDIS');\nvar es6_promise_1 = require('es6-promise');\nvar RedisStorageInstance = (function (_super) {\n    __extends(RedisStorageInstance, _super);\n    function RedisStorageInstance(instanceName, config, rules) {\n        _super.call(this, instanceName, config);\n        this.config = config;\n        this.rules = rules;\n        this.validateStorageConfig();\n        this.hashKey = 'simple-url-cache:' + this.instanceName;\n    }\n    RedisStorageInstance.prototype.clearCache = function () {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            var client = _this._conn.getConnection();\n            var batch = client.batch();\n            client.hkeys(_this.hashKey, function (err, domains) {\n                debug(err);\n                if (err)\n                    reject(err);\n                debug('Domains found = ', domains);\n                if (domains.length === 0) {\n                    resolve(true);\n                }\n                var nb = 0;\n                domains.forEach(function (domain) {\n                    batch.del(_this.getDomainHashKey(domain));\n                    batch.hdel(_this.hashKey, domain);\n                    client.hkeys(_this.getDomainHashKey(domain), function (err, keys) {\n                        debug('keys = ', keys);\n                        keys.forEach(function (key) {\n                            batch.del(_this.getUrlKey(domain, key));\n                        });\n                        nb++;\n                        if (nb === domains.length) {\n                            batch.exec(function (err) {\n                                debug(err);\n                                if (err)\n                                    reject(err);\n                                resolve(true);\n                            });\n                        }\n                    });\n                });\n            });\n        });\n    };\n    RedisStorageInstance.prototype.clearDomain = function (domain) {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            var client = _this._conn.getConnection();\n            debug('Clear all cache called');\n            client.hdel(_this.hashKey, domain, function (err) {\n                if (err)\n                    reject(err);\n                client.hkeys(_this.getDomainHashKey(domain), function (err, urls) {\n                    debug('getting keys for ', _this.getDomainHashKey(domain), urls);\n                    var nb = 0;\n                    if (urls.length === 0) {\n                        resolve(true);\n                    }\n                    var promises = [];\n                    urls.forEach(function (url) {\n                        debug('Deleting key ', _this.getUrlKey(domain, url));\n                        promises.push(_this.delete(domain, url));\n                        es6_promise_1.Promise.all(promises).then(function () {\n                            resolve(true);\n                        }, function (err) {\n                            reject(err);\n                        });\n                    });\n                });\n            });\n        });\n    };\n    RedisStorageInstance.prototype.getCachedDomains = function () {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            debug('getAllCachedDomains called');\n            _this._conn.getConnection().hkeys(_this.hashKey, function (err, results) {\n                if (err)\n                    reject(err);\n                debug('hkeys() ', _this.hashKey, results);\n                resolve(results);\n            });\n        });\n    };\n    RedisStorageInstance.prototype.getCacheRules = function () {\n        return this.rules;\n    };\n    RedisStorageInstance.prototype.getCachedURLs = function (domain) {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            var client = _this._conn.getConnection();\n            var cachedUrls = [];\n            var promises = [];\n            client.hkeys(_this.getDomainHashKey(domain), function (err, urls) {\n                if (err)\n                    reject(err);\n                if (urls.length === 0) {\n                    resolve(cachedUrls);\n                }\n                debug('found these urls in ', _this.getDomainHashKey(domain));\n                urls.forEach(function (url) {\n                    promises.push(client.get(_this.getUrlKey(domain, url), function (err, data) {\n                        if (err)\n                            reject(err);\n                        debug('for url, got content ', url, data);\n                        if (data !== null) {\n                            cachedUrls.push(url);\n                        }\n                        else {\n                            client.hdel(_this.getDomainHashKey(domain), url, function (err) {\n                                if (err)\n                                    reject(err);\n                            });\n                        }\n                    }));\n                    es6_promise_1.Promise.all(promises).then(function () {\n                        resolve(cachedUrls);\n                    }, function (err) {\n                        reject(err);\n                    });\n                });\n            });\n        });\n    };\n    RedisStorageInstance.prototype.delete = function (domain, url) {\n        var _this = this;\n        debug('removing url cache: ', domain, url);\n        var client = this._conn.getConnection();\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            _this.has(domain, url).then(function (isCached) {\n                if (!isCached) {\n                    reject();\n                }\n                else {\n                    client.del(_this.getUrlKey(domain, url), function (err) {\n                        if (err) {\n                            debug('REDIS ERROR, ', err);\n                            reject(err);\n                        }\n                        debug('DELETING HASH ', _this.getDomainHashKey(domain));\n                        client.hdel(_this.getDomainHashKey(domain), url, function (err) {\n                            if (err) {\n                                debug('REDIS ERROR', err);\n                                reject(err);\n                            }\n                            resolve(true);\n                        });\n                    });\n                }\n            }, function (err) {\n                reject(err);\n            });\n        });\n    };\n    RedisStorageInstance.prototype.destroy = function () {\n        this._conn.kill();\n    };\n    RedisStorageInstance.prototype.get = function (domain, url) {\n        var _this = this;\n        debug('Retrieving url cache: ', domain, url);\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            var client = _this._conn.getConnection();\n            client.hget(_this.getDomainHashKey(domain), url, function (err, content) {\n                if (err)\n                    reject(err);\n                if (content === null) {\n                    reject(null);\n                }\n                client.get(_this.getUrlKey(domain, url), function (err, timestamp) {\n                    if (err)\n                        reject(err);\n                    if (timestamp === null) {\n                        client.hdel(_this.getDomainHashKey(domain), _this.getUrlKey(domain, url), function (err) {\n                            if (err)\n                                reject(err);\n                            reject(null);\n                        });\n                    }\n                    else {\n                        resolve(content);\n                    }\n                });\n            });\n        });\n    };\n    RedisStorageInstance.prototype.has = function (domain, url) {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            var client = _this._conn.getConnection();\n            client.get(_this.getUrlKey(domain, url), function (err, data) {\n                if (err) {\n                    debug('Error while querying is cached on redis: ', domain, url, err);\n                    reject(err);\n                }\n                else {\n                    var isCached = data !== null;\n                    debug('HAS, key ', _this.getUrlKey(domain, url), 'is cached? ', isCached);\n                    if (!isCached) {\n                        client.hdel(_this.getDomainHashKey(domain), url, function (err) {\n                            debug('hdel executed', _this.getDomainHashKey(domain), url);\n                            if (err) {\n                                reject(err);\n                            }\n                            resolve(false);\n                        });\n                    }\n                    else {\n                        resolve(true);\n                    }\n                }\n            });\n        });\n    };\n    RedisStorageInstance.prototype.set = function (domain, url, value, category, ttl, force) {\n        var _this = this;\n        var client = this._conn.getConnection();\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            if (force === true) {\n                var ttl_1 = 0;\n                _this.store(domain, url, value, ttl_1, force).then(function (result) {\n                    resolve(result);\n                }, function (err) {\n                    reject(err);\n                });\n                return;\n            }\n            if (category === 'never') {\n                debug('this url should never been stored');\n                resolve(false);\n                return;\n            }\n            _this.has(domain, url).then(function (has) {\n                if (has === true) {\n                    debug('This url is already cached - not storing it: ', domain, url);\n                    resolve(false);\n                }\n                else {\n                    _this.store(domain, url, value, ttl, force).then(function (result) {\n                        resolve(result);\n                    }, function (err) {\n                        reject(err);\n                    });\n                }\n            }, function (err) {\n                reject(err);\n            });\n        });\n    };\n    RedisStorageInstance.prototype.getDomainHashKey = function (domain) {\n        return this.hashKey + ':' + domain;\n    };\n    RedisStorageInstance.prototype.store = function (domain, url, value, ttl, force) {\n        var _this = this;\n        var client = this._conn.getConnection();\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            client.hset(_this.hashKey, domain, domain, function (err, result) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    client.hset(_this.getDomainHashKey(domain), url, value, function (err, exists) {\n                        if (err) {\n                            reject(err);\n                        }\n                        if (exists === 0) {\n                            debug('Already set ');\n                            resolve(true);\n                            return;\n                        }\n                        else {\n                            client.get(_this.getUrlKey(domain, url), function (err, result) {\n                                if (err) {\n                                    reject(err);\n                                    return;\n                                }\n                                if (result === null) {\n                                    debug('REDIS timestamp not set');\n                                    client.set(_this.getUrlKey(domain, url), Date.now(), function (err) {\n                                        if (err) {\n                                            reject(err);\n                                            return;\n                                        }\n                                        if (ttl > 0) {\n                                            client.expire(_this.getUrlKey(domain, url), ttl, function (err) {\n                                                if (err)\n                                                    reject(err);\n                                                resolve(true);\n                                            });\n                                        }\n                                        else {\n                                            resolve(true);\n                                        }\n                                    });\n                                }\n                                else if (force === true) {\n                                    if (ttl > 0) {\n                                        client.expire(_this.getUrlKey(domain, url), ttl, function (err) {\n                                            if (err)\n                                                reject(err);\n                                            resolve(true);\n                                        });\n                                    }\n                                    else {\n                                        resolve(true);\n                                    }\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    };\n    RedisStorageInstance.prototype.validateStorageConfig = function () {\n        this._conn = new pool_1.RedisPool(this.config);\n    };\n    RedisStorageInstance.prototype.getUrlKey = function (domain, url) {\n        return this.getDomainHashKey(domain) + ':' + url;\n    };\n    return RedisStorageInstance;\n}(interfaces_1.StorageInstance));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RedisStorageInstance;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/redis/instance.ts\n ** module id = 2\n ** module chunks = 0\n **/","\"use strict\";\nvar helpers_1 = require('./helpers');\nvar StorageInstance = (function () {\n    function StorageInstance(instanceName, config) {\n        this.instanceName = instanceName;\n        if (helpers_1.default.isRedis(config)) {\n            this.storageType = 'redis';\n        }\n        else {\n            throw new Error('only redis is supported');\n        }\n    }\n    StorageInstance.prototype.getStorageType = function () {\n        return this.storageType;\n    };\n    StorageInstance.prototype.getInstanceName = function () {\n        return this.instanceName;\n    };\n    return StorageInstance;\n}());\nexports.StorageInstance = StorageInstance;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/interfaces.ts\n ** module id = 3\n ** module chunks = 0\n **/","\"use strict\";\nvar Helpers = (function () {\n    function Helpers() {\n    }\n    Helpers.isRedis = function (storageConfig) {\n        return typeof storageConfig.host !== 'undefined';\n    };\n    Helpers.isStringDefined = function (input) {\n        if (typeof input !== 'string' || input.length === 0) {\n            Helpers.invalidParameterError('this should be a non empty string', input);\n        }\n    };\n    Helpers.isStringIn = function (input, values) {\n        if (typeof input !== 'string') {\n            return false;\n        }\n        var valid = false;\n        values.forEach(function (value) {\n            if (value === input) {\n                valid = true;\n            }\n        });\n        if (!valid) {\n            Helpers.invalidParameterError('This string should contain only these values : ' + values.join(', '), input);\n        }\n    };\n    Helpers.isArray = function (data) {\n        if ((data instanceof Array) === false) {\n            Helpers.invalidParameterError('This should be an array', data);\n        }\n    };\n    Helpers.isRegexRule = function (data) {\n        if ((data.regex instanceof RegExp) === false) {\n            Helpers.invalidParameterError('This should be a Regexp', data);\n        }\n    };\n    Helpers.hasMaxAge = function (data) {\n        if (typeof data.maxAge !== 'number') {\n            Helpers.invalidParameterError('This rule misses a maxAge property', data);\n        }\n    };\n    Helpers.isOptionalBoolean = function (data) {\n        if (typeof data !== 'undefined' && typeof data !== 'boolean') {\n            Helpers.invalidParameterError('You provided an optional boolean but this is not a boolean', data);\n        }\n    };\n    Helpers.validateCacheConfig = function (cacheRules) {\n        Helpers.isStringIn(cacheRules.default, ['always', 'never']);\n        ['always', 'never', 'maxAge'].forEach(function (type) {\n            Helpers.isArray(cacheRules[type]);\n            cacheRules[type].forEach(function (rule) {\n                Helpers.isRegexRule(rule);\n                if (type === 'maxAge') {\n                    Helpers.hasMaxAge(rule);\n                }\n            });\n        });\n    };\n    Helpers.validateRedisStorageConfig = function (data) {\n    };\n    Helpers.invalidParameterError = function (name, value) {\n        throw new TypeError('Invalid parameter: ' + name + '. Value received: ' + JSON.stringify(value));\n    };\n    return Helpers;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Helpers;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/helpers.ts\n ** module id = 4\n ** module chunks = 0\n **/","\"use strict\";\nvar redis = require('redis');\nvar dbug = require('debug');\nvar debug = dbug('simple-url-cache-REDIS');\nvar RedisPool = (function () {\n    function RedisPool(config) {\n        RedisPool.connect(config);\n        this.db = config.db;\n    }\n    RedisPool.connect = function (config) {\n        if (typeof RedisPool._pool[config.db] === 'undefined' || RedisPool._pool[config.db] === null || !RedisPool._isOnline[config.db]) {\n            debug('This redis connection has never been instanciated before', config.db);\n            RedisPool._isOnline[config.db] = false;\n            RedisPool._pool[config.db] = redis.createClient(config);\n            RedisPool._pool[config.db].on('connect', function () {\n                RedisPool._isOnline[config.db] = true;\n                debug('redis connected');\n            });\n            RedisPool._pool[config.db].on('error', function (e) {\n                debug(e);\n                RedisPool._isOnline[config.db] = false;\n                RedisPool._pool[config.db] = null;\n                throw new Error(e);\n            });\n            RedisPool._pool[config.db].on('end', function () {\n                RedisPool._pool[config.db] = null;\n                RedisPool._isOnline[config.db] = false;\n                debug('Connection closed');\n            });\n            RedisPool._pool[config.db].on('warning', function (msg) {\n                debug('Warning called: ', msg);\n            });\n        }\n        return RedisPool._pool[config.db];\n    };\n    RedisPool.isOnline = function (db) {\n        return RedisPool._isOnline[db];\n    };\n    RedisPool.kill = function (db) {\n        if (RedisPool._isOnline[db] === true) {\n            RedisPool._pool[db].end();\n        }\n    };\n    RedisPool.prototype.getConnection = function () {\n        return RedisPool._pool[this.db];\n    };\n    RedisPool.prototype.isOnline = function () {\n        return RedisPool._isOnline[this.db];\n    };\n    RedisPool.prototype.kill = function () {\n        if (RedisPool._isOnline[this.db] === true) {\n            RedisPool._pool[this.db].end();\n        }\n    };\n    RedisPool._pool = {};\n    RedisPool._isOnline = {};\n    return RedisPool;\n}());\nexports.RedisPool = RedisPool;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/redis/pool.ts\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = require(\"redis\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"redis\"\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = require(\"debug\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"debug\"\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = require(\"url\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"url\"\n ** module id = 8\n ** module chunks = 0\n **/","\"use strict\";\nvar helpers_1 = require('./helpers');\nvar Cache = (function () {\n    function Cache(_domain, _storageInstance, _url) {\n        var _this = this;\n        this._domain = _domain;\n        this._storageInstance = _storageInstance;\n        this._url = _url;\n        this._category = '';\n        this._maxAge = 0;\n        this.delete = function () {\n            return _this.getStorageInstance().delete(_this._domain, _this._url);\n        };\n        this.get = function () {\n            return _this.getStorageInstance().get(_this._domain, _this._url, _this._category, _this._maxAge);\n        };\n        this.has = function () {\n            return _this.getStorageInstance().has(_this._domain, _this._url, _this._category, _this._maxAge);\n        };\n        this.set = function (html, force) {\n            helpers_1.default.isStringDefined(html);\n            helpers_1.default.isOptionalBoolean(force);\n            if (typeof force === 'undefined') {\n                force = false;\n            }\n            return _this.getStorageInstance().set(_this._domain, _this._url, html, _this._category, _this._maxAge, force);\n        };\n        this.getRegexTest = function (u) {\n            return u.regex.test(_this._url);\n        };\n        this._config = this._storageInstance.getCacheRules();\n        this.setCacheCategory();\n    }\n    Cache.prototype.getDomain = function () {\n        return this._domain;\n    };\n    Cache.prototype.getCategory = function () {\n        return this._category;\n    };\n    Cache.prototype.getInstanceName = function () {\n        return this._storageInstance.getInstanceName();\n    };\n    Cache.prototype.getStorageType = function () {\n        return this._storageInstance.getStorageType();\n    };\n    Cache.prototype.getUrl = function () {\n        return this._url;\n    };\n    Cache.prototype.setCacheCategory = function () {\n        var i;\n        for (i in this._config.maxAge) {\n            if (this.getRegexTest(this._config.maxAge[i]) === true) {\n                this._category = 'maxAge';\n                this._maxAge = this._config.maxAge[i].maxAge;\n            }\n        }\n        for (i in this._config.always) {\n            if (this.getRegexTest(this._config.always[i]) === true) {\n                if (this._category !== 'always') {\n                    console.error('And overriding maxAge with always');\n                }\n                this._category = 'always';\n            }\n        }\n        for (i in this._config.never) {\n            if (this.getRegexTest(this._config.never[i]) === true) {\n                if (this._category !== 'always') {\n                    console.error('And overriding maxAge/Always with mever');\n                }\n                this._category = 'never';\n            }\n        }\n        if (this._category.length === 0) {\n            this._category = this._config.default;\n        }\n    };\n    ;\n    Cache.prototype.getStorageInstance = function () {\n        return this._storageInstance;\n    };\n    return Cache;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Cache;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/cache.ts\n ** module id = 9\n ** module chunks = 0\n **/"],"sourceRoot":""}