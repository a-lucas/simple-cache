{"version":3,"sources":["webpack:///webpack/bootstrap 6adf22fcc16654c7d158","webpack:///./ts/index.ts","webpack:///./ts/cacheEngine/cacheEnginePromise.ts","webpack:///external \"es6-promise\"","webpack:///./ts/helpers.ts","webpack:///external \"url\"","webpack:///external \"debug\"","webpack:///./ts/cacheEngine/cache.ts","webpack:///./ts/cacheEngine/CacheEngine.ts","webpack:///./ts/redis/instancePromise.ts","webpack:///./ts/redis/instanceCB.ts","webpack:///./ts/redis/pool.ts","webpack:///external \"redis\"","webpack:///./ts/abstract/storage.ts","webpack:///./ts/cacheEngine/cacheEngineCB.ts","webpack:///./ts/instance.ts","webpack:///./ts/rules/CacheRuleManager.ts","webpack:///./ts/rules/CacheRulesCreator.ts"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;AC/EA,yC;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;AChKA,iC;;;;;;ACAA,mC;;;;;;ACAA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,4BAA4B;AACjD;AACA,4BAA2B,qCAAqC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,4BAA4B;AACjD;AACA,4BAA2B,qCAAqC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,2BAA2B;AAChD;AACA,4BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC/IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;AChDA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;AC5IA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;ACzRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC1GA,mC;;;;;;ACAA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC7BA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,WAAW,0DAA0D;AACrG;AACA;AACA;AACA;AACA;AACA,sCAAqC,yDAAyD;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,uCAAuC;AAClE;AACA,uCAAsC,uDAAuD;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,uCAAuC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;;;;;;;ACpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D","file":"dist/redis-cache.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6adf22fcc16654c7d158\n **/","\"use strict\";\nvar cacheEnginePromise_1 = require('./cacheEngine/cacheEnginePromise');\nvar cacheEngineCB_1 = require('./cacheEngine/cacheEngineCB');\nvar instance_1 = require('./instance');\nvar CacheRulesCreator_1 = require('./rules/CacheRulesCreator');\nmodule.exports.CacheEnginePromise = cacheEnginePromise_1.default;\nmodule.exports.CacheEngineCB = cacheEngineCB_1.default;\nmodule.exports.Instance = instance_1.default;\nmodule.exports.CacheRulesCreator = CacheRulesCreator_1.default;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/index.ts\n ** module id = 0\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar es6_promise_1 = require('es6-promise');\nvar helpers_1 = require('../helpers');\nvar dbug = require('debug');\nvar cache_1 = require('./cache');\nvar CacheEngine_1 = require(\"./CacheEngine\");\nvar instancePromise_1 = require(\"../redis/instancePromise\");\nvar debug = dbug('simple-url-cache');\nvar CacheEnginePromise = (function (_super) {\n    __extends(CacheEnginePromise, _super);\n    function CacheEnginePromise(defaultDomain, instance) {\n        _super.call(this, defaultDomain, instance);\n        this.storageInstance = new instancePromise_1.default(instance);\n    }\n    CacheEnginePromise.prototype.clearDomain = function (domain) {\n        var _this = this;\n        if (typeof domain === 'undefined') {\n            domain = this.defaultDomain;\n        }\n        helpers_1.default.isStringDefined(domain);\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            _this.storageInstance.clearDomain(domain).then(function () {\n                resolve(true);\n            }, function (err) {\n                reject(err);\n            });\n        });\n    };\n    CacheEnginePromise.prototype.clearInstance = function () {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            _this.storageInstance.clearCache().then(function () {\n                resolve(true);\n            }, function (err) {\n                reject(err);\n            });\n        });\n    };\n    CacheEnginePromise.prototype.getStoredHostnames = function () {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            _this.storageInstance.getCachedDomains().then(function (domains) {\n                resolve(domains);\n            }, function (err) {\n                reject(err);\n            });\n        });\n    };\n    CacheEnginePromise.prototype.getStoredURLs = function (domain) {\n        var _this = this;\n        if (typeof domain === 'undefined') {\n            domain = this.defaultDomain;\n        }\n        helpers_1.default.isStringDefined(domain);\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            _this.storageInstance.getCachedURLs(domain).then(function (urls) {\n                resolve(urls);\n            }, function (err) {\n                reject(err);\n            });\n        });\n    };\n    CacheEnginePromise.prototype.url = function (url) {\n        var parsedURL = helpers_1.default.parseURL(url);\n        if (parsedURL.domain.length === 0) {\n            parsedURL.domain = this.defaultDomain;\n        }\n        var cache = new cache_1.UrlPromise(parsedURL.domain, this.storageInstance, this.instanceName, parsedURL.relativeURL);\n        this.addUrl(cache);\n        return cache;\n    };\n    return CacheEnginePromise;\n}(CacheEngine_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CacheEnginePromise;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/cacheEngine/cacheEnginePromise.ts\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = require(\"es6-promise\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"es6-promise\"\n ** module id = 2\n ** module chunks = 0\n **/","\"use strict\";\nvar nodeurl = require('url');\nvar Helpers = (function () {\n    function Helpers() {\n    }\n    Helpers.isRedis = function (storageConfig) {\n        return typeof storageConfig.host !== 'undefined';\n    };\n    Helpers.isStringDefined = function (input) {\n        if (typeof input !== 'string' || input.length === 0) {\n            Helpers.invalidParameterError('this should be a non empty string', input);\n        }\n    };\n    Helpers.isStringIn = function (input, values) {\n        if (typeof input !== 'string') {\n            return false;\n        }\n        var valid = false;\n        values.forEach(function (value) {\n            if (value === input) {\n                valid = true;\n            }\n        });\n        if (!valid) {\n            Helpers.invalidParameterError('This string should contain only these values : ' + values.join(', '), input);\n        }\n    };\n    Helpers.parseURL = function (url) {\n        Helpers.isStringDefined(url);\n        var parsedURL = nodeurl.parse(url);\n        var relativeURL = parsedURL.path;\n        if (!/\\//.test(relativeURL)) {\n            relativeURL = '/' + relativeURL;\n        }\n        parsedURL.pathname = null;\n        parsedURL.path = null;\n        parsedURL.hash = null;\n        parsedURL.query = null;\n        parsedURL.search = null;\n        var domain = nodeurl.format(parsedURL);\n        if (domain === relativeURL) {\n            Helpers.invalidParameterError('invalid URL ', url);\n        }\n        return {\n            domain: domain,\n            relativeURL: relativeURL\n        };\n    };\n    Helpers.isNotUndefined = function () {\n        var input = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            input[_i - 0] = arguments[_i];\n        }\n        if (input.length = 0) {\n            Helpers.invalidParameterError('No parameters required', input);\n        }\n        for (var i in input) {\n            if (typeof input === 'undefined') {\n                Helpers.invalidParameterError('Undefined paraneter provided at index ', i);\n            }\n        }\n    };\n    Helpers.isArray = function (data) {\n        if ((data instanceof Array) === false) {\n            Helpers.invalidParameterError('This should be an array', data);\n        }\n    };\n    Helpers.hasMaxAge = function (data) {\n        if (typeof data.maxAge !== 'number') {\n            Helpers.invalidParameterError('This rule misses a maxAge property', data);\n        }\n    };\n    Helpers.isBoolean = function (data) {\n        if (typeof data !== 'boolean') {\n            Helpers.invalidParameterError('This is not a boolean probably the force param missing', data);\n        }\n    };\n    Helpers.isOptionalBoolean = function (data) {\n        if (typeof data !== 'undefined' && typeof data !== 'boolean') {\n            Helpers.invalidParameterError('You provided an optional boolean but this is not a boolean', data);\n        }\n    };\n    Helpers.SameRegex = function (r1, r2) {\n        if (r1 instanceof RegExp && r2 instanceof RegExp) {\n            var props = [\"global\", \"multiline\", \"ignoreCase\", \"source\"];\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                if (r1[prop] !== r2[prop]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    Helpers.isMaxAgeRegexRule = function (rule) {\n        Helpers.isConfigRegexRule(rule);\n        if (typeof rule.maxAge !== 'number') {\n            Helpers.invalidParameterError('This isnt a valid MaxAge RegexRule - one of the rule misses maxAge prop', rule);\n        }\n    };\n    Helpers.isConfigRegexRule = function (rule) {\n        if ((rule.regex instanceof RegExp) === false) {\n            Helpers.invalidParameterError('This isnt a valid RegexRule - the rule is not a regex', rule);\n        }\n        if (typeof rule.ignoreQuery !== 'boolean') {\n            Helpers.invalidParameterError('This isnt a valid RegexRule - the rule misses ignoreQuery prop', rule);\n        }\n    };\n    Helpers.validateCacheConfig = function (cacheRules) {\n        Helpers.isStringIn(cacheRules.default, ['always', 'never']);\n        ['always', 'never', 'maxAge'].forEach(function (type) {\n            for (var key in cacheRules[type]) {\n                if (typeof cacheRules[type][key].domain !== 'string' && (cacheRules[type][key].domain instanceof RegExp) === false) {\n                    Helpers.invalidParameterError('Domain must be either a regex or a string', cacheRules[type][key].domain);\n                }\n                Helpers.isArray(cacheRules[type][key].rules);\n                cacheRules[type][key].rules.forEach(function (rule) {\n                    if (type === 'maxAge') {\n                        Helpers.isMaxAgeRegexRule(rule);\n                    }\n                    else {\n                        Helpers.isConfigRegexRule(rule);\n                    }\n                });\n            }\n        });\n    };\n    Helpers.JSONRegExpReplacer = function (key, value) {\n        if (value instanceof RegExp) {\n            return (\"__REGEXP \" + value.toString());\n        }\n        else {\n            return value;\n        }\n    };\n    Helpers.JSONRegExpReviver = function (key, value) {\n        if (value.toString().indexOf(\"__REGEXP \") == 0) {\n            var m = value.split(\"__REGEXP \")[1].match(/\\/(.*)\\/(.*)?/);\n            return new RegExp(m[1], m[2] || \"\");\n        }\n        else {\n            return value;\n        }\n    };\n    Helpers.getConfigKey = function () {\n        return 'url-cache:ruleconfig';\n    };\n    Helpers.validateRedisStorageConfig = function (data) {\n        return false;\n    };\n    Helpers.invalidParameterError = function (name, value) {\n        throw new TypeError('Invalid parameter: ' + name + '. Value received: ' + JSON.stringify(value));\n    };\n    Helpers.RedisError = function (description, msg) {\n        throw new Error('Redis: ' + description + '. Error received: ' + msg);\n    };\n    return Helpers;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Helpers;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/helpers.ts\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = require(\"url\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"url\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = require(\"debug\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"debug\"\n ** module id = 5\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helpers_1 = require('../helpers');\nvar debug = require('debug')('simple-url-cache');\nvar UrlCommon = (function () {\n    function UrlCommon(_domain, _storageInstance, _instanceName, _url) {\n        var _this = this;\n        this._domain = _domain;\n        this._instanceName = _instanceName;\n        this._url = _url;\n        this._category = '';\n        this._maxAge = 0;\n        this.getRegexTest = function (u) {\n            return u.regex.test(_this._url);\n        };\n        if (this.hasPromise(_storageInstance)) {\n            this._storagePromise = _storageInstance;\n            this._storage = _storageInstance;\n        }\n        else {\n            this._storageCB = _storageInstance;\n            this._storage = _storageInstance;\n        }\n        this.setCacheCategory();\n    }\n    UrlCommon.prototype.hasPromise = function (storage) {\n        return storage.getMethod() === 'promise';\n    };\n    UrlCommon.prototype.getDomain = function () {\n        return this._domain;\n    };\n    UrlCommon.prototype.getCategory = function () {\n        return this._category;\n    };\n    UrlCommon.prototype.getInstanceName = function () {\n        return this._instanceName;\n    };\n    UrlCommon.prototype.getUrl = function () {\n        return this._url;\n    };\n    UrlCommon.prototype.getTTL = function () {\n        return this._maxAge;\n    };\n    UrlCommon.prototype.checkDomain = function (stored) {\n        if (typeof stored === 'string') {\n            return this._domain.indexOf(stored) !== -1;\n        }\n        else {\n            return stored.test(this._domain);\n        }\n    };\n    UrlCommon.prototype.setCacheCategory = function () {\n        var key, domain, i;\n        var config = this._storage.getCacheRules();\n        for (key = 0; key < config.maxAge.length; key++) {\n            if (this.checkDomain(config.maxAge[key].domain)) {\n                for (i = 0; i < config.maxAge[key].rules.length; i++) {\n                    if (this.getRegexTest(config.maxAge[key].rules[i]) === true) {\n                        this._category = 'maxAge';\n                        this._maxAge = config.maxAge[key].rules[i].maxAge;\n                        return;\n                    }\n                }\n            }\n        }\n        for (key = 0; key < config.always.length; key++) {\n            if (this.checkDomain(config.always[key].domain)) {\n                for (i = 0; i < config.always[key].rules.length; i++) {\n                    if (this.getRegexTest(config.always[key].rules[i]) === true) {\n                        this._category = 'always';\n                        return;\n                    }\n                }\n            }\n        }\n        for (key = 0; key < config.never.length; key++) {\n            if (this.checkDomain(config.never[key].domain)) {\n                for (i = 0; i < config.never[key].rules.length; i++) {\n                    if (this.getRegexTest(config.never[key].rules[i]) === true) {\n                        this._category = 'never';\n                        return;\n                    }\n                }\n            }\n        }\n        this._category = config.default;\n    };\n    ;\n    return UrlCommon;\n}());\nexports.UrlCommon = UrlCommon;\nvar UrlPromise = (function (_super) {\n    __extends(UrlPromise, _super);\n    function UrlPromise() {\n        var _this = this;\n        _super.apply(this, arguments);\n        this.delete = function () {\n            return _this._storagePromise.delete(_this.getDomain(), _this.getUrl(), _this.getCategory(), _this.getTTL());\n        };\n        this.get = function () {\n            return _this._storagePromise.get(_this.getDomain(), _this.getUrl(), _this.getCategory(), _this.getTTL());\n        };\n        this.has = function () {\n            return _this._storagePromise.has(_this.getDomain(), _this.getUrl(), _this.getCategory(), _this.getTTL());\n        };\n        this.set = function (html, force) {\n            helpers_1.default.isStringDefined(html);\n            helpers_1.default.isOptionalBoolean(force);\n            if (typeof force === 'undefined') {\n                force = false;\n            }\n            return _this._storagePromise.set(_this.getDomain(), _this.getUrl(), html, _this.getCategory(), _this.getTTL(), force);\n        };\n    }\n    return UrlPromise;\n}(UrlCommon));\nexports.UrlPromise = UrlPromise;\nvar UrlCB = (function (_super) {\n    __extends(UrlCB, _super);\n    function UrlCB() {\n        var _this = this;\n        _super.apply(this, arguments);\n        this.delete = function (cb) {\n            _this._storageCB.delete(_this.getDomain(), _this.getUrl(), _this.getCategory(), _this.getTTL(), cb);\n        };\n        this.get = function (cb) {\n            _this._storageCB.get(_this.getDomain(), _this.getUrl(), _this.getCategory(), _this.getTTL(), cb);\n        };\n        this.has = function (cb) {\n            _this._storageCB.has(_this.getDomain(), _this.getUrl(), _this.getCategory(), _this.getTTL(), cb);\n        };\n        this.set = function (html, force, cb) {\n            helpers_1.default.isStringDefined(html);\n            helpers_1.default.isBoolean(force);\n            _this._storageCB.set(_this.getDomain(), _this.getUrl(), html, _this.getCategory(), _this.getTTL(), force, cb);\n        };\n    }\n    return UrlCB;\n}(UrlCommon));\nexports.UrlCB = UrlCB;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/cacheEngine/cache.ts\n ** module id = 6\n ** module chunks = 0\n **/","\"use strict\";\nvar helpers_1 = require(\"../helpers\");\nvar debug = require('debug')('simple-url-cache');\nvar CacheEngine = (function () {\n    function CacheEngine(defaultDomain, instanceDefinition) {\n        this.defaultDomain = defaultDomain;\n        this.instanceDefinition = instanceDefinition;\n        helpers_1.default.isNotUndefined(defaultDomain, instanceDefinition);\n        helpers_1.default.isStringDefined(defaultDomain);\n        if (instanceDefinition.isInstanciated() === false) {\n            var errorMsg = 'This instance hasn\\'t initiated correctly: ' + instanceDefinition.getInstanceName();\n            console.error(errorMsg);\n            throw new Error(errorMsg);\n        }\n        this.instanceName = instanceDefinition.getInstanceName();\n        if (instanceDefinition.getConfig().on_publish_update === true && typeof CacheEngine.urls[this.instanceName] === 'undefined') {\n            CacheEngine.urls[this.instanceName] = {};\n        }\n    }\n    CacheEngine.updateAllUrlCategory = function (instanceName) {\n        helpers_1.default.isStringDefined(instanceName);\n        if (typeof CacheEngine.urls[instanceName] !== 'undefined') {\n            var key = void 0;\n            for (key in CacheEngine.urls[instanceName]) {\n                CacheEngine.urls[instanceName][key].setCacheCategory();\n            }\n        }\n    };\n    CacheEngine.prototype.getInstanceName = function () {\n        return this.instanceName;\n    };\n    CacheEngine.prototype.addUrl = function (url) {\n        if (typeof CacheEngine.urls[this.instanceName] !== 'undefined' && typeof CacheEngine.urls[this.instanceName][this.buildURLIndex(url)] === 'undefined') {\n            CacheEngine.urls[this.instanceName][this.buildURLIndex(url)] = url;\n        }\n    };\n    CacheEngine.prototype.buildURLIndex = function (url) {\n        return this.instanceName + '_' + url.getDomain() + '_' + url.getUrl();\n    };\n    CacheEngine.urls = {};\n    CacheEngine.helpers = {\n        validateRedisStorageConfig: helpers_1.default.validateRedisStorageConfig,\n        validateCacheConfig: helpers_1.default.validateCacheConfig\n    };\n    CacheEngine.hashKey = 'url-cache:';\n    return CacheEngine;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CacheEngine;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/cacheEngine/CacheEngine.ts\n ** module id = 7\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar debg = require('debug');\nvar es6_promise_1 = require('es6-promise');\nvar instanceCB_1 = require(\"./instanceCB\");\nvar storage_1 = require(\"../abstract/storage\");\nvar debug = debg('simple-url-cache-REDIS');\nvar RedisStoragePromise = (function (_super) {\n    __extends(RedisStoragePromise, _super);\n    function RedisStoragePromise(instance) {\n        _super.call(this);\n        this.instance = instance;\n        this.hashKey = 'simple-url-cache:' + instance.getInstanceName();\n        this.cbInstance = new instanceCB_1.default(instance);\n        this.method = 'promise';\n    }\n    RedisStoragePromise.prototype.getCacheRules = function () {\n        return this.instance.getManager().getRules();\n    };\n    RedisStoragePromise.prototype.clearCache = function () {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            _this.cbInstance.clearCache(function (err, results) {\n                if (err) {\n                    debug(err);\n                    reject(err);\n                }\n                else {\n                    resolve(results);\n                }\n            });\n        });\n    };\n    RedisStoragePromise.prototype.clearDomain = function (domain) {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            _this.cbInstance.clearDomain(domain, function (err, results) {\n                if (err) {\n                    debug(err);\n                    reject(err);\n                }\n                else {\n                    resolve(results);\n                }\n            });\n        });\n    };\n    RedisStoragePromise.prototype.getCachedDomains = function () {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            _this.cbInstance.getCachedDomains(function (err, results) {\n                if (err) {\n                    debug(err);\n                    reject(err);\n                }\n                else {\n                    resolve(results);\n                }\n            });\n        });\n    };\n    RedisStoragePromise.prototype.getCachedURLs = function (domain) {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            _this.cbInstance.getCachedURLs(domain, function (err, results) {\n                if (err) {\n                    debug(err);\n                    reject(err);\n                }\n                else {\n                    resolve(results);\n                }\n            });\n        });\n    };\n    RedisStoragePromise.prototype.delete = function (domain, url, category, ttl) {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            _this.cbInstance.delete(domain, url, category, ttl, function (err, results) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(results);\n                }\n            });\n        });\n    };\n    RedisStoragePromise.prototype.destroy = function () {\n        this.cbInstance.destroy();\n    };\n    RedisStoragePromise.prototype.get = function (domain, url, category, ttl) {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            _this.cbInstance.get(domain, url, category, ttl, function (err, results) {\n                if (err) {\n                    debug(err);\n                    reject(err);\n                }\n                else {\n                    resolve(results);\n                }\n            });\n        });\n    };\n    RedisStoragePromise.prototype.has = function (domain, url, category, ttl) {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            _this.cbInstance.has(domain, url, category, ttl, function (err, results) {\n                if (err) {\n                    debug(err);\n                    reject(err);\n                }\n                else {\n                    resolve(results);\n                }\n            });\n        });\n    };\n    RedisStoragePromise.prototype.set = function (domain, url, value, category, ttl, force) {\n        var _this = this;\n        return new es6_promise_1.Promise(function (resolve, reject) {\n            _this.cbInstance.set(domain, url, value, category, ttl, force, function (err, results) {\n                if (err) {\n                    debug(err);\n                    reject(err);\n                }\n                else {\n                    resolve(results);\n                }\n            });\n        });\n    };\n    return RedisStoragePromise;\n}(storage_1.StoragePromise));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RedisStoragePromise;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/redis/instancePromise.ts\n ** module id = 8\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar pool_1 = require('./pool');\nvar debg = require('debug');\nvar CacheEngine_1 = require(\"../cacheEngine/CacheEngine\");\nvar storage_1 = require(\"../abstract/storage\");\nvar debug = debg('simple-url-cache-REDIS');\nvar RedisStorageCB = (function (_super) {\n    __extends(RedisStorageCB, _super);\n    function RedisStorageCB(instance) {\n        _super.call(this);\n        this.instance = instance;\n        this._conn = pool_1.RedisPool.getConnection(instance.getInstanceName());\n        this.hashKey = CacheEngine_1.default.hashKey + this.instance.getInstanceName();\n        this.method = 'callback';\n    }\n    RedisStorageCB.prototype.clearCache = function (cb) {\n        var _this = this;\n        var batch = this._conn.batch();\n        this._conn.hkeys(this.hashKey, function (err, domains) {\n            debug(err);\n            if (err)\n                return cb(err);\n            if (domains.length === 0) {\n                return cb(null, true);\n            }\n            var nb = 0;\n            domains.forEach(function (domain) {\n                batch.del(_this.getDomainHashKey(domain));\n                batch.hdel(_this.hashKey, domain);\n                _this._conn.hkeys(_this.getDomainHashKey(domain), function (err, keys) {\n                    debug('keys = ', keys);\n                    keys.forEach(function (key) {\n                        batch.del(_this.getUrlKey(domain, key));\n                    });\n                    nb++;\n                    if (nb === domains.length) {\n                        batch.exec(function (err) {\n                            debug(err);\n                            if (err)\n                                return cb(err);\n                            return cb(null, true);\n                        });\n                    }\n                });\n            });\n        });\n    };\n    RedisStorageCB.prototype.clearDomain = function (domain, cb) {\n        var _this = this;\n        this._conn.hdel(this.hashKey, domain, function (err) {\n            if (err)\n                return cb(err);\n            _this._conn.hkeys(_this.getDomainHashKey(domain), function (err, urls) {\n                if (urls.length === 0) {\n                    return cb(null, true);\n                }\n                var nb = 0;\n                urls.forEach(function (url) {\n                    _this.delete(domain, url, null, null, function (err) {\n                        if (err)\n                            return cb(err);\n                        nb++;\n                        if (nb === urls.length) {\n                            cb(null, true);\n                        }\n                    });\n                });\n            });\n        });\n    };\n    RedisStorageCB.prototype.getCachedDomains = function (cb) {\n        this._conn.hkeys(this.hashKey, function (err, results) {\n            if (err)\n                return cb(err);\n            return cb(null, results);\n        });\n    };\n    RedisStorageCB.prototype.getCachedURLs = function (domain, cb) {\n        var _this = this;\n        var cachedUrls = [];\n        this._conn.hkeys(this.getDomainHashKey(domain), function (err, urls) {\n            if (err)\n                return cb(err);\n            if (urls.length === 0) {\n                return cb(null, cachedUrls);\n            }\n            var nb = 0;\n            urls.forEach(function (url) {\n                _this._conn.get(_this.getUrlKey(domain, url), function (err, data) {\n                    if (err)\n                        return cb(err);\n                    if (data !== null) {\n                        cachedUrls.push(url);\n                        nb++;\n                        if (nb === urls.length) {\n                            return cb(null, cachedUrls);\n                        }\n                    }\n                    else {\n                        _this._conn.hdel(_this.getDomainHashKey(domain), url, function (err) {\n                            if (err)\n                                return cb(err);\n                            nb++;\n                            if (nb === urls.length) {\n                                return cb(null, cachedUrls);\n                            }\n                        });\n                    }\n                });\n            });\n        });\n    };\n    RedisStorageCB.prototype.getCacheRules = function () {\n        return this.instance.getManager().getRules();\n    };\n    RedisStorageCB.prototype.delete = function (domain, url, category, ttl, cb) {\n        var _this = this;\n        this.has(domain, url, category, ttl, function (err, isCached) {\n            if (!isCached) {\n                return cb('url is not cached');\n            }\n            else {\n                _this._conn.del(_this.getUrlKey(domain, url), function (err) {\n                    if (err) {\n                        return cb(err);\n                    }\n                    _this._conn.hdel(_this.getDomainHashKey(domain), url, function (err) {\n                        if (err) {\n                            return cb(err);\n                        }\n                        return cb(null, true);\n                    });\n                });\n            }\n        });\n    };\n    RedisStorageCB.prototype.destroy = function () {\n        pool_1.RedisPool.kill(this.instance.getInstanceName());\n    };\n    RedisStorageCB.prototype.get = function (domain, url, category, ttl, cb) {\n        var _this = this;\n        this._conn.hget(this.getDomainHashKey(domain), url, function (err, content) {\n            if (err)\n                return cb(err);\n            if (content === null) {\n                return cb('url not cached');\n            }\n            _this._conn.get(_this.getUrlKey(domain, url), function (err, timestamp) {\n                if (err)\n                    return cb(err);\n                if (timestamp === null) {\n                    _this._conn.hdel(_this.getDomainHashKey(domain), _this.getUrlKey(domain, url), function (err) {\n                        if (err)\n                            return cb(err);\n                        return cb('url not cached - cleaning timestamp informations');\n                    });\n                }\n                else {\n                    return cb(null, content);\n                }\n            });\n        });\n    };\n    RedisStorageCB.prototype.has = function (domain, url, category, ttl, cb) {\n        var _this = this;\n        this._conn.get(this.getUrlKey(domain, url), function (err, data) {\n            if (err) {\n                debug('Error while querying is cached on redis: ', domain, url, err);\n                return cb(err);\n            }\n            else {\n                var isCached = data !== null;\n                if (!isCached) {\n                    _this._conn.hdel(_this.getDomainHashKey(domain), url, function (err) {\n                        if (err)\n                            return cb(err);\n                        return cb(null, false);\n                    });\n                }\n                else {\n                    return cb(null, true);\n                }\n            }\n        });\n    };\n    RedisStorageCB.prototype.set = function (domain, url, value, category, ttl, force, cb) {\n        var _this = this;\n        if (force === true) {\n            var ttl_1 = 0;\n            this.store(domain, url, value, ttl_1, force, function (err, result) {\n                if (err)\n                    return cb(err);\n                return cb(null, result);\n            });\n        }\n        else if (category === 'never') {\n            return cb(null, false);\n        }\n        else {\n            this.has(domain, url, category, ttl, function (err, has) {\n                if (err)\n                    return cb(err);\n                if (has === true) {\n                    return cb(null, false);\n                }\n                else {\n                    _this.store(domain, url, value, ttl, force, function (err, result) {\n                        if (err)\n                            return cb(err);\n                        return cb(null, result);\n                    });\n                }\n            });\n        }\n    };\n    ;\n    RedisStorageCB.prototype.getDomainHashKey = function (domain) {\n        return this.hashKey + ':' + domain;\n    };\n    RedisStorageCB.prototype.store = function (domain, url, value, ttl, force, cb) {\n        var _this = this;\n        this._conn.hset(this.hashKey, domain, domain, function (err) {\n            if (err) {\n                return cb(err);\n            }\n            else {\n                _this._conn.hset(_this.getDomainHashKey(domain), url, value, function (err, exists) {\n                    if (err) {\n                        return cb(err);\n                    }\n                    if (exists === 0) {\n                        return cb(null, true);\n                    }\n                    _this._conn.get(_this.getUrlKey(domain, url), function (err, result) {\n                        if (err) {\n                            return cb(err);\n                        }\n                        if (result === null) {\n                            _this._conn.set(_this.getUrlKey(domain, url), Date.now(), function (err) {\n                                if (err)\n                                    return cb(err);\n                                if (ttl > 0) {\n                                    _this._conn.expire(_this.getUrlKey(domain, url), ttl, function (err) {\n                                        if (err)\n                                            return cb(err);\n                                        return cb(null, true);\n                                    });\n                                }\n                                else {\n                                    return cb(null, true);\n                                }\n                            });\n                        }\n                        else if (force === true) {\n                            if (ttl > 0) {\n                                _this._conn.expire(_this.getUrlKey(domain, url), ttl, function (err) {\n                                    if (err)\n                                        return cb(err);\n                                    return cb(null, true);\n                                });\n                            }\n                            else {\n                                return cb(null, true);\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    };\n    RedisStorageCB.prototype.getUrlKey = function (domain, url) {\n        return this.getDomainHashKey(domain) + ':' + url;\n    };\n    return RedisStorageCB;\n}(storage_1.StorageCB));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RedisStorageCB;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/redis/instanceCB.ts\n ** module id = 9\n ** module chunks = 0\n **/","\"use strict\";\nvar redis = require('redis');\nvar dbug = require('debug');\nvar debug = dbug('simple-url-cache-REDIS');\nvar RedisPool = (function () {\n    function RedisPool() {\n    }\n    RedisPool.connect = function (instanceName, config, cb) {\n        if (typeof RedisPool._pool[instanceName] === 'undefined' ||\n            RedisPool._pool[instanceName] === null ||\n            typeof RedisPool._sub[instanceName] === 'undefined' ||\n            RedisPool._sub[instanceName] === null) {\n            debug('This redis connection has never been instanciated before', instanceName);\n            RedisPool._status[instanceName] = {\n                online: false,\n                lastError: null,\n                warnings: []\n            };\n            RedisPool._pool[instanceName] = redis.createClient(config);\n            RedisPool._sub[instanceName] = redis.createClient(config);\n            var nb = 0;\n            var nbErrors = 0;\n            RedisPool._pool[instanceName].on('connect', function () {\n                RedisPool._status[instanceName].online = true;\n                debug('redis connected');\n                nb++;\n                if (nb === 2) {\n                    debug('POOL CONNECTED 2 conns');\n                    cb(null);\n                }\n            });\n            RedisPool._sub[instanceName].on('connect', function () {\n                RedisPool._status[instanceName].online = true;\n                debug('redis connected');\n                nb++;\n                if (nb === 2) {\n                    debug('POOL CONNECTED 2 conns');\n                    cb(null);\n                }\n            });\n            RedisPool._pool[instanceName].on('error', function (e) {\n                debug(e);\n                RedisPool._status[instanceName].lastError = e;\n                nbErrors++;\n                if (nbErrors === 1) {\n                    cb(e);\n                }\n            });\n            RedisPool._pool[instanceName].on('end', function () {\n                RedisPool._pool[instanceName] = null;\n                RedisPool._status[instanceName].online = false;\n                console.warn('Redis Connection closed for instance ' + instanceName);\n                debug('Connection closed', instanceName);\n            });\n            RedisPool._pool[instanceName].on('warning', function (msg) {\n                console.warn('Redis warning for instance ' + instanceName + '. MSG = ', msg);\n                RedisPool._status[instanceName].warnings.push(msg);\n                debug('Warning called: ', instanceName, msg);\n            });\n            RedisPool._sub[instanceName].on('error', function (e) {\n                debug(e);\n                RedisPool._status[instanceName].lastError = e;\n                nbErrors++;\n                if (nbErrors === 1) {\n                    cb(e);\n                }\n            });\n            RedisPool._sub[instanceName].on('end', function () {\n                RedisPool._sub[instanceName] = null;\n                RedisPool._status[instanceName].online = false;\n                console.warn('Redis Connection closed for instance ' + instanceName);\n                debug('Connection closed', instanceName);\n            });\n            RedisPool._sub[instanceName].on('warning', function (msg) {\n                console.warn('Redis warning for instance ' + instanceName + '. MSG = ', msg);\n                RedisPool._status[instanceName].warnings.push(msg);\n                debug('Warning called: ', instanceName, msg);\n            });\n        }\n        else {\n            cb();\n        }\n    };\n    RedisPool.kill = function (instanceName) {\n        if (RedisPool._status[instanceName].online === true) {\n            RedisPool._pool[instanceName].end();\n            RedisPool._sub[instanceName].end();\n        }\n    };\n    RedisPool.getConnection = function (instanceName) {\n        if (RedisPool._status[instanceName].online) {\n            return RedisPool._pool[instanceName];\n        }\n        debug('Redis Pool isn\\'t online yet');\n    };\n    RedisPool.getSubscriberConnection = function (instanceName) {\n        if (RedisPool._status[instanceName].online) {\n            return RedisPool._sub[instanceName];\n        }\n        debug('Redis Pool isn\\'t online yet');\n    };\n    RedisPool._pool = {};\n    RedisPool._sub = {};\n    RedisPool._status = {};\n    return RedisPool;\n}());\nexports.RedisPool = RedisPool;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/redis/pool.ts\n ** module id = 10\n ** module chunks = 0\n **/","module.exports = require(\"redis\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"redis\"\n ** module id = 11\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Storage = (function () {\n    function Storage() {\n    }\n    Storage.prototype.getMethod = function () {\n        return this.method;\n    };\n    return Storage;\n}());\nvar StoragePromise = (function (_super) {\n    __extends(StoragePromise, _super);\n    function StoragePromise() {\n        _super.apply(this, arguments);\n    }\n    return StoragePromise;\n}(Storage));\nexports.StoragePromise = StoragePromise;\nvar StorageCB = (function (_super) {\n    __extends(StorageCB, _super);\n    function StorageCB() {\n        _super.apply(this, arguments);\n    }\n    return StorageCB;\n}(Storage));\nexports.StorageCB = StorageCB;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/abstract/storage.ts\n ** module id = 12\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar instanceCB_1 = require(\"../redis/instanceCB\");\nvar helpers_1 = require('../helpers');\nvar cache_1 = require('./cache');\nvar CacheEngine_1 = require(\"./CacheEngine\");\nvar dbug = require('debug');\nvar debug = dbug('simple-url-cache');\nvar CacheEngineCB = (function (_super) {\n    __extends(CacheEngineCB, _super);\n    function CacheEngineCB(defaultDomain, instance) {\n        _super.call(this, defaultDomain, instance);\n        this.storageInstance = new instanceCB_1.default(instance);\n    }\n    CacheEngineCB.prototype.clearDomain = function (domain, cb) {\n        helpers_1.default.isStringDefined(domain);\n        this.storageInstance.clearDomain(domain, cb);\n    };\n    CacheEngineCB.prototype.clearInstance = function (cb) {\n        this.storageInstance.clearCache(cb);\n    };\n    CacheEngineCB.prototype.getStoredHostnames = function (cb) {\n        this.storageInstance.getCachedDomains(cb);\n    };\n    CacheEngineCB.prototype.getStoredURLs = function (domain, cb) {\n        helpers_1.default.isStringDefined(domain);\n        this.storageInstance.getCachedURLs(domain, cb);\n    };\n    CacheEngineCB.prototype.url = function (url) {\n        var parsedURL = helpers_1.default.parseURL(url);\n        if (parsedURL.domain.length === 0) {\n            parsedURL.domain = this.defaultDomain;\n        }\n        var cache = new cache_1.UrlCB(parsedURL.domain, this.storageInstance, this.instanceName, parsedURL.relativeURL);\n        this.addUrl(cache);\n        return cache;\n    };\n    return CacheEngineCB;\n}(CacheEngine_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CacheEngineCB;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/cacheEngine/cacheEngineCB.ts\n ** module id = 13\n ** module chunks = 0\n **/","\"use strict\";\nvar helpers_1 = require(\"./helpers\");\nvar pool_1 = require(\"./redis/pool\");\nvar CacheEngine_1 = require('./cacheEngine/CacheEngine');\nvar CacheRuleManager_1 = require('./rules/CacheRuleManager');\nvar debug = require('debug')('simple-url-cache');\nvar Instance = (function () {\n    function Instance(instanceName, redisConfig, config, cb) {\n        var _this = this;\n        if (config === void 0) { config = { on_existing_regex: 'replace', on_publish_update: false }; }\n        this.instanceName = instanceName;\n        this.redisConfig = redisConfig;\n        this.config = config;\n        this.instanciated = false;\n        helpers_1.default.isNotUndefined(instanceName, redisConfig, config, cb);\n        this.config = Object.assign({ on_existing_regex: 'replace', on_publish_update: false }, config);\n        pool_1.RedisPool.connect(instanceName, redisConfig, function (err) {\n            if (err)\n                cb('Error connecting to REDIS: ' + err);\n            var redisConn = pool_1.RedisPool.getConnection(instanceName);\n            redisConn.hget(helpers_1.default.getConfigKey(), _this.instanceName, function (err, data) {\n                if (err)\n                    cb('Redis error - retrieving ' + helpers_1.default.getConfigKey() + ' -> ' + err);\n                if (data === null) {\n                    cb('No CacheRule defined for this instance ' + _this.instanceName);\n                }\n                else {\n                    _this.instanciated = true;\n                    var parsedData = JSON.parse(data, helpers_1.default.JSONRegExpReviver);\n                    _this.manager = new CacheRuleManager_1.default(parsedData, config.on_existing_regex);\n                    _this.launchSubscriber();\n                    cb(null);\n                }\n            });\n        });\n    }\n    Instance.prototype.launchSubscriber = function () {\n        var _this = this;\n        var subscriber = pool_1.RedisPool.getSubscriberConnection(this.instanceName);\n        subscriber.subscribe(this.getChannel());\n        subscriber.on('message', function (channel, message) {\n            if (message === 'PUSHED') {\n                _this.onPublish();\n            }\n        });\n    };\n    Instance.prototype.getChannel = function () {\n        return helpers_1.default.getConfigKey() + this.instanceName;\n    };\n    Instance.prototype.publish = function () {\n        var _this = this;\n        CacheEngine_1.default.updateAllUrlCategory(this.instanceName);\n        var redisConn = pool_1.RedisPool.getConnection(this.instanceName);\n        var stringified = JSON.stringify(this.manager.getRules(), helpers_1.default.JSONRegExpReplacer, 2);\n        redisConn.hset(helpers_1.default.getConfigKey(), this.instanceName, stringified, function (err) {\n            if (err)\n                helpers_1.default.RedisError('while publishing config ' + stringified, err);\n            redisConn.publish(_this.getChannel(), 'PUSHED');\n        });\n    };\n    Instance.prototype.onPublish = function () {\n        var _this = this;\n        var redisConn = pool_1.RedisPool.getConnection(this.instanceName);\n        redisConn.hget(helpers_1.default.getConfigKey(), this.instanceName, function (err, data) {\n            if (err)\n                throw new Error('Redis error - retrieving ' + helpers_1.default.getConfigKey());\n            if (data === null) {\n                throw new Error('Big mess');\n            }\n            var parsedData = JSON.parse(data, helpers_1.default.JSONRegExpReviver);\n            _this.manager.updateRules(parsedData);\n        });\n    };\n    Instance.prototype.getManager = function () {\n        return this.manager;\n    };\n    Instance.prototype.getConfig = function () {\n        return this.config;\n    };\n    Instance.prototype.getInstanceName = function () {\n        return this.instanceName;\n    };\n    Instance.prototype.getRedisConfig = function () {\n        return this.redisConfig;\n    };\n    Instance.prototype.isInstanciated = function () {\n        return this.instanciated;\n    };\n    return Instance;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Instance;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/instance.ts\n ** module id = 14\n ** module chunks = 0\n **/","\"use strict\";\nvar helpers_1 = require(\"../helpers\");\nvar debug = require('debug')('simple-url-cache');\nvar CacheRuleManager = (function () {\n    function CacheRuleManager(cacheRules, on_existing_regex) {\n        this.cacheRules = cacheRules;\n        this.on_existing_regex = on_existing_regex;\n    }\n    CacheRuleManager.prototype.addMaxAgeRule = function (domain, regex, maxAge, ignoreQuery) {\n        helpers_1.default.isNotUndefined(domain, regex, maxAge);\n        var regexRule = { regex: regex, maxAge: maxAge, ignoreQuery: ignoreQuery ? ignoreQuery : false };\n        helpers_1.default.isMaxAgeRegexRule(regexRule);\n        var found = this.findRegex(domain, regexRule);\n        this.add(domain, regexRule, 'maxAge', found);\n    };\n    CacheRuleManager.prototype.addNeverRule = function (domain, regex, ignoreQuery) {\n        helpers_1.default.isNotUndefined(regex);\n        var regexRule = { regex: regex, ignoreQuery: ignoreQuery ? ignoreQuery : false };\n        helpers_1.default.isConfigRegexRule(regexRule);\n        var found = this.findRegex(domain, regexRule);\n        this.add(domain, regexRule, 'never', found);\n    };\n    CacheRuleManager.prototype.addAlwaysRule = function (domain, regex, ignoreQuery) {\n        helpers_1.default.isNotUndefined(regex);\n        var regexRule = { regex: regex, ignoreQuery: ignoreQuery ? ignoreQuery : false };\n        helpers_1.default.isConfigRegexRule(regexRule);\n        var found = this.findRegex(domain, regexRule);\n        this.add(domain, regexRule, 'always', found);\n    };\n    CacheRuleManager.prototype.getRules = function () {\n        return this.cacheRules;\n    };\n    CacheRuleManager.prototype.setDefault = function (strategy) {\n        helpers_1.default.isStringIn(strategy, ['always', 'never']);\n        this.cacheRules.default = strategy;\n    };\n    CacheRuleManager.prototype.removeRule = function (domain, rule) {\n        helpers_1.default.isNotUndefined(rule);\n        helpers_1.default.isConfigRegexRule(rule);\n        var found = this.findRegex(domain, rule);\n        if (found !== null) {\n            this.cacheRules[found.type][found.index].rules.splice(found.subIndex, 1);\n            if (this.cacheRules[found.type][found.index].rules.length === 0) {\n                this.cacheRules[found.type].splice(found.index, 1);\n            }\n        }\n    };\n    CacheRuleManager.prototype.removeAllMaxAgeRules = function () {\n        this.cacheRules.maxAge = {};\n    };\n    CacheRuleManager.prototype.removeAllNeverRules = function () {\n        this.cacheRules.never = {};\n    };\n    CacheRuleManager.prototype.removeAllAlwaysRules = function (domain) {\n        this.cacheRules.always = {};\n    };\n    CacheRuleManager.prototype.updateRules = function (cacheRules) {\n        this.cacheRules = cacheRules;\n    };\n    CacheRuleManager.prototype.checkDomainMatch = function (stored, input) {\n        if (typeof stored === 'string' && typeof input === 'string') {\n            return stored === input;\n        }\n        else if (stored instanceof RegExp && input instanceof RegExp) {\n            return helpers_1.default.SameRegex(stored, input);\n        }\n        else {\n            return false;\n        }\n    };\n    CacheRuleManager.prototype.findRegex = function (domain, rule) {\n        var _this = this;\n        var info = null, index, subIndex;\n        ['always', 'never', 'maxAge'].forEach(function (type) {\n            for (index = 0; index < _this.cacheRules[type].length; index++) {\n                if (_this.checkDomainMatch(_this.cacheRules[type][index].domain, domain)) {\n                    for (subIndex = 0; subIndex < _this.cacheRules[type][index].rules.length; subIndex++) {\n                        if (helpers_1.default.SameRegex(rule.regex, _this.cacheRules[type][index].rules[subIndex].regex)) {\n                            info = {\n                                type: type,\n                                index: index,\n                                subIndex: subIndex\n                            };\n                            break;\n                        }\n                    }\n                }\n            }\n        });\n        return info;\n    };\n    CacheRuleManager.prototype.add = function (domain, rule, where, found) {\n        debug('adding rule ', domain, rule, where, found);\n        debug('before: ', this.cacheRules);\n        if (found !== null) {\n            switch (this.on_existing_regex) {\n                case 'ignore':\n                    return;\n                case 'replace':\n                    debug('replacing: ', this.cacheRules[found.type][found.index].rules, found.subIndex);\n                    this.cacheRules[found.type][found.index].rules.splice(found.subIndex, 1);\n                    break;\n                case 'error':\n                    throw new Error('Adding a maxAge regex that is already defined here: ' + JSON.parse(found));\n            }\n        }\n        if (found !== null && found.type === where) {\n            this.cacheRules[where][found.index].rules.push(rule);\n        }\n        else {\n            var index2update = void 0, index = void 0;\n            for (index = 0; index < this.cacheRules[where].length; index++) {\n                if (this.checkDomainMatch(this.cacheRules[where][index].domain, domain)) {\n                    index2update = index;\n                }\n            }\n            if (typeof index2update === 'number') {\n                debug('A domain already exists, so pusing rules at index ', index2update, this.cacheRules[where][index2update]);\n                this.cacheRules[where][index2update].rules.push(rule);\n            }\n            else {\n                this.cacheRules[where].push({\n                    domain: domain,\n                    rules: [rule]\n                });\n            }\n        }\n        return;\n    };\n    return CacheRuleManager;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CacheRuleManager;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/rules/CacheRuleManager.ts\n ** module id = 15\n ** module chunks = 0\n **/","\"use strict\";\nvar pool_1 = require(\"../redis/pool\");\nvar helpers_1 = require(\"../helpers\");\nvar CacheRulesCreator = (function () {\n    function CacheRulesCreator(instanceName, redisConfig, cb) {\n        var _this = this;\n        this.instanceName = instanceName;\n        this.redisConfig = redisConfig;\n        helpers_1.default.isNotUndefined(instanceName, redisConfig, cb);\n        pool_1.RedisPool.connect(instanceName, redisConfig, function (err) {\n            if (err)\n                cb('Error connecting to REDIS');\n            _this._conn = pool_1.RedisPool.getConnection(instanceName);\n            cb(null);\n        });\n    }\n    CacheRulesCreator.prototype.importRules = function (rules, cb) {\n        var _this = this;\n        helpers_1.default.isNotUndefined(rules, cb);\n        helpers_1.default.validateCacheConfig(rules);\n        this._conn.hget(helpers_1.default.getConfigKey(), this.instanceName, function (err, data) {\n            if (err)\n                cb('Redis error - retrieving ' + helpers_1.default.getConfigKey() + ': ' + err);\n            if (data !== null) {\n                cb('A CacheRule definition already exists for this instance');\n            }\n            else {\n                var stringified = JSON.stringify(rules, helpers_1.default.JSONRegExpReplacer, 2);\n                _this._conn.hset(helpers_1.default.getConfigKey(), _this.instanceName, stringified, function (err) {\n                    if (err)\n                        cb(err);\n                    cb(null);\n                });\n            }\n        });\n    };\n    return CacheRulesCreator;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CacheRulesCreator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ts/rules/CacheRulesCreator.ts\n ** module id = 16\n ** module chunks = 0\n **/"],"sourceRoot":""}